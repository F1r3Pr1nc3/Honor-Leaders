# HONOR CODE

# Scope country
# honor_leader_honor_leader = {
# }
# HONOR CODE for Memorials - permanent traits and accomplishments
honor_leader_honor_leader_memorial = {
	# Permanent bonus based on leader traits - ALL VANILLA TRAITS CHECKED.
	# Generic leader traits
	event_target:honor_leader = {
		if = { limit = { has_trait = leader_trait_adaptable } prev = { add_modifier = { modifier = country_memorialized_leader_adaptable } } }
		if = { limit = { has_trait = leader_trait_stubborn } prev = { add_modifier = { modifier = country_memorialized_leader_stubborn } } }
		if = { limit = { has_trait = leader_trait_resilient } prev = { add_modifier = { modifier = country_memorialized_leader_resilient } } }
		if = { limit = { has_trait = leader_trait_substance_abuser } prev = { add_modifier = { modifier = country_memorialized_leader_substance_abuser } } }
		if = { limit = { has_trait = leader_trait_eager } prev = { add_modifier = { modifier = country_memorialized_leader_eager } } }
		if = { limit = { has_trait = leader_trait_arrested_development } prev = { add_modifier = { modifier = country_memorialized_leader_arrested_development } } }
		# Ruler traits
		if = { limit = { has_trait = trait_ruler_corvette_focus } prev = { add_modifier = { modifier = country_memorialized_ruler_corvette } } }
		if = { limit = { has_trait = trait_ruler_destroyer_focus } prev = { add_modifier = { modifier = country_memorialized_ruler_destroyer } } }
		if = { limit = { has_trait = trait_ruler_cruiser_focus } prev = { add_modifier = { modifier = country_memorialized_ruler_cruiser } } }
		if = { limit = { has_trait = trait_ruler_battleship_focus } prev = { add_modifier = { modifier = country_memorialized_ruler_battleship } } }
		if = { limit = { has_trait = trait_ruler_recruiter } prev = { add_modifier = { modifier = country_memorialized_ruler_recruiter } } }
		if = { limit = { has_trait = trait_ruler_from_the_ranks } prev = { add_modifier = { modifier = country_memorialized_ruler_from_the_ranks } } }
		if = { limit = { has_trait = trait_ruler_fortifier } prev = { add_modifier = { modifier = country_memorialized_ruler_fortifier } } }
		if = { limit = { has_trait = trait_ruler_logistic_understanding } prev = { add_modifier = { modifier = country_memorialized_ruler_logistic_understanding } } }
		if = { limit = { has_trait = trait_ruler_military_pioneer } prev = { add_modifier = { modifier = country_memorialized_ruler_military_pioneer } } }
		if = { limit = { has_trait = trait_ruler_warlike } prev = { add_modifier = { modifier = country_memorialized_ruler_warlike } } }
		if = { limit = { has_trait = trait_ruler_architectural_sense } prev = { add_modifier = { modifier = country_memorialized_ruler_architectural_sense } } }
		if = { limit = { has_trait = trait_ruler_frontier_spirit } prev = { add_modifier = { modifier = country_memorialized_ruler_frontier_spirit } } }
		if = { limit = { has_trait = trait_ruler_world_shaper } prev = { add_modifier = { modifier = country_memorialized_ruler_world_shaper } } }
		if = { limit = { has_trait = trait_ruler_home_in_the_sky } prev = { add_modifier = { modifier = country_memorialized_ruler_home_in_the_sky } } }
		if = { limit = { has_trait = trait_ruler_industrialist } prev = { add_modifier = { modifier = country_memorialized_ruler_industrialist } } }
		if = { limit = { has_trait = trait_ruler_eye_for_talent } prev = { add_modifier = { modifier = country_memorialized_ruler_eye_for_talent } } }
		if = { limit = { has_trait = trait_ruler_deep_connections } prev = { add_modifier = { modifier = country_memorialized_ruler_deep_connections } } }
		if = { limit = { has_trait = trait_ruler_charismatic } prev = { add_modifier = { modifier = country_memorialized_ruler_charismatic } } }
		if = { limit = { has_trait = trait_ruler_champion_of_the_people } prev = { add_modifier = { modifier = country_memorialized_ruler_champion_of_the_people } } }
		if = { limit = { has_trait = trait_ruler_expansionist } prev = { add_modifier = { modifier = country_memorialized_ruler_expansionist } } }
		if = { limit = { has_trait = trait_ruler_fertility_preacher } prev = { add_modifier = { modifier = country_memorialized_ruler_fertility_preacher } } }
		if = { limit = { has_trait = trait_ruler_investor } prev = { add_modifier = { modifier = country_memorialized_ruler_investor } } }
		if = { limit = { has_trait = trait_ruler_space_miner } prev = { add_modifier = { modifier = country_memorialized_ruler_space_miner } } }
		if = { limit = { has_trait = trait_ruler_explorer } prev = { add_modifier = { modifier = country_memorialized_ruler_explorer } } }
		if = { limit = { has_trait = leader_trait_fleet_organizer } prev = { add_modifier = { modifier = country_memorialized_ruler_fleet_organizer } } }
		# Governor traits
		if = { limit = { has_trait = leader_trait_iron_fist prev = { has_policy_flag = slavery_allowed } } prev = { add_modifier = { modifier = country_memorialized_governor_iron_fist } } }
		if = { limit = { has_trait = leader_trait_army_veteran } prev = { add_modifier = { modifier = country_memorialized_governor_army_veteran } } }
		if = { limit = { has_trait = leader_trait_retired_fleet_officer } prev = { add_modifier = { modifier = country_memorialized_governor_retired_fleet_officer } } }
		if = { limit = { has_trait = leader_trait_architectural_interest } prev = { add_modifier = { modifier = country_memorialized_governor_architectural_interest } } }
		if = { limit = { has_trait = leader_trait_agrarian_upbringing } prev = { add_modifier = { modifier = country_memorialized_governor_agrarian_upbringing } } }
		if = { limit = { has_trait = leader_trait_intellectual } prev = { add_modifier = { modifier = country_memorialized_governor_intellectual } } }
		if = { limit = { has_trait = leader_trait_environmental_engineer } prev = { add_modifier = { modifier = country_memorialized_governor_environmental_engineer } } }
		# Scientist traits
		if = { limit = { has_trait = leader_trait_meticulous } prev = { add_modifier = { modifier = country_memorialized_scientist_meticulous } } }
		if = { limit = { has_trait = leader_trait_spark_of_genius } prev = { add_modifier = { modifier = country_memorialized_scientist_spark_of_genius } } }
		if = { limit = { has_trait = leader_trait_carefree } prev = { add_modifier = { modifier = country_memorialized_scientist_carefree } } }
		if = { limit = { has_trait = leader_trait_roamer } prev = { add_modifier = { modifier = country_memorialized_scientist_roamer } } }
		# Figure out ancient relics vs base.
		# if = { limit = { has_trait = leader_trait_archaeologist } prev = { add_modifier = { modifier = country_memorialized_scientist_archaeologist } } }
		if = { limit = { has_trait = leader_trait_paranoid } prev = { add_modifier = { modifier = country_memorialized_scientist_paranoid } } }
		if = { limit = { has_trait = leader_trait_maniacal } prev = { add_modifier = { modifier = country_memorialized_scientist_maniacal } } }
		if = { limit = { has_trait = leader_trait_custom_AI_assistant } prev = { add_modifier = { modifier = country_memorialized_scientist_custom_AI_assistant } } }
		if = { limit = { has_trait = leader_trait_sapient_AI_assistant NOT = { prev = { has_policy_flag = ai_outlawed } } } prev = { add_modifier = { modifier = country_memorialized_scientist_sapient_AI_assistant } } }
		if = { limit = { has_trait = leader_trait_expertise_materials } prev = { add_modifier = { modifier = country_memorialized_scientist_expertise_materials } } }
		if = { limit = { has_trait = leader_trait_expertise_propulsion } prev = { add_modifier = { modifier = country_memorialized_scientist_expertise_propulsion } } }
		if = { limit = { has_trait = leader_trait_expertise_voidcraft } prev = { add_modifier = { modifier = country_memorialized_scientist_expertise_voidcraft } } }
		if = { limit = { has_trait = leader_trait_expertise_industry } prev = { add_modifier = { modifier = country_memorialized_scientist_expertise_industry } } }
		if = { limit = { has_trait = leader_trait_expertise_field_manipulation } prev = { add_modifier = { modifier = country_memorialized_scientist_expertise_field_manipulation } } }
		if = { limit = { has_trait = leader_trait_expertise_particles } prev = { add_modifier = { modifier = country_memorialized_scientist_expertise_particles } } }
		if = { limit = { has_trait = leader_trait_expertise_computing } prev = { add_modifier = { modifier = country_memorialized_scientist_expertise_computing } } }
		if = { limit = { has_trait = leader_trait_expertise_psionics } prev = { add_modifier = { modifier = country_memorialized_scientist_expertise_psionics } } }
		if = { limit = { has_trait = leader_trait_expertise_new_worlds } prev = { add_modifier = { modifier = country_memorialized_scientist_expertise_new_worlds } } }
		if = { limit = { has_trait = leader_trait_expertise_statecraft } prev = { add_modifier = { modifier = country_memorialized_scientist_expertise_statecraft } } }
		if = { limit = { has_trait = leader_trait_expertise_biology } prev = { add_modifier = { modifier = country_memorialized_scientist_expertise_biology } } }
		if = { limit = { has_trait = leader_trait_expertise_military_theory } prev = { add_modifier = { modifier = country_memorialized_scientist_expertise_military_theory } } }
		if = { limit = { has_trait = leader_trait_towel } prev = { add_modifier = { modifier = country_memorialized_scientist_towel } } }
		# Admiral Traits
		if = { limit = { has_trait = leader_trait_trickster } prev = { add_modifier = { modifier = country_memorialized_admiral_trickster } } }
		if = { limit = { has_trait = leader_trait_fleet_logistician } prev = { add_modifier = { modifier = country_memorialized_admiral_fleet_logistician } } }
		if = { limit = { has_trait = leader_trait_engineer } prev = { add_modifier = { modifier = country_memorialized_admiral_engineer } } }
		if = { limit = { has_trait = leader_trait_aggressive } prev = { add_modifier = { modifier = country_memorialized_admiral_aggressive } } }
		if = { limit = { has_trait = leader_trait_cautious } prev = { add_modifier = { modifier = country_memorialized_admiral_cautious } } }
		if = { limit = { has_trait = leader_trait_scout } prev = { add_modifier = { modifier = country_memorialized_admiral_scout } } }
		if = { limit = { has_trait = leader_trait_unyielding } prev = { add_modifier = { modifier = country_memorialized_admiral_unyielding } } }
		if = { limit = { has_trait = leader_trait_nervous } prev = { add_modifier = { modifier = country_memorialized_admiral_nervous } } }
		if = { limit = { has_trait = leader_trait_gale_speed } prev = { add_modifier = { modifier = country_memorialized_admiral_gale_speed } } }
		if = { limit = { has_trait = leader_trait_lethargic } prev = { add_modifier = { modifier = country_memorialized_admiral_lethargic } } }
		# General Traits
		if = { limit = { has_trait = leader_trait_restrained } prev = { add_modifier = { modifier = country_memorialized_general_restrained } } }
		if = { limit = { has_trait = leader_trait_charismatic } prev = { add_modifier = { modifier = country_memorialized_general_charismatic } } }
		if = { limit = { has_trait = leader_trait_butcher } prev = { add_modifier = { modifier = country_memorialized_general_butcher } } }
		if = { limit = { has_trait = leader_trait_glory_seeker } prev = { add_modifier = { modifier = country_memorialized_general_glory_seeker } } }
		if = { limit = { has_trait = leader_trait_armchair_commander } prev = { add_modifier = { modifier = country_memorialized_general_armchair_commander } } }
		if = { limit = { has_trait = leader_trait_army_logistician } prev = { add_modifier = { modifier = country_memorialized_general_army_logistician } } }
		# DLC Traits
		if = { limit = { has_trait = leader_trait_shroud_age } prev = { add_modifier = { modifier = country_memorialized_leader_shroud_age } } }
		if = { limit = { has_trait = leader_trait_flexible_programming } prev = { add_modifier = { modifier = country_memorialized_leader_flexible_programming } } }
		if = { limit = { has_trait = leader_trait_rigid_programming } prev = { add_modifier = { modifier = country_memorialized_leader_rigid_programming } } }
		if = { limit = { has_trait = leader_trait_newboot } prev = { add_modifier = { modifier = country_memorialized_leader_newboot } } }
		if = { limit = { has_trait = leader_trait_reformer } prev = { add_modifier = { modifier = country_memorialized_ruler_reformer } } }
		if = { limit = { has_trait = leader_trait_ruler_erudite } prev = { add_modifier = { modifier = country_memorialized_ruler_erudite } } }
		if = { limit = { has_trait = leader_trait_ruler_cyborg } prev = { add_modifier = { modifier = country_memorialized_ruler_cyborg } } }
		if = { limit = { has_trait = leader_trait_ruler_synthetic } prev = { add_modifier = { modifier = country_memorialized_ruler_synthetic } } }
		if = { limit = { has_trait = leader_trait_ruler_psionic } prev = { add_modifier = { modifier = country_memorialized_ruler_psionic } } }
		if = { limit = { has_trait = leader_trait_ruler_chosen } prev = { add_modifier = { modifier = country_memorialized_ruler_chosen } } }
		if = { limit = { has_trait = leader_trait_ruler_hive_mind } prev = { add_modifier = { modifier = country_memorialized_ruler_hive_mind } } }
		if = { limit = { has_trait = leader_trait_ruler_machine_intelligence } prev = { add_modifier = { modifier = country_memorialized_ruler_machine_intelligence } } }
		if = { limit = { has_trait = leader_trait_ruler_brainslug } prev = { add_modifier = { modifier = country_memorialized_ruler_brainslug } } }
		if = { limit = { has_trait = leader_trait_governor_erudite } prev = { add_modifier = { modifier = country_memorialized_governor_erudite } } }
		if = { limit = { has_trait = leader_trait_governor_cyborg } prev = { add_modifier = { modifier = country_memorialized_governor_cyborg } } }
		if = { limit = { has_trait = leader_trait_governor_synthetic } prev = { add_modifier = { modifier = country_memorialized_governor_synthetic } } }
		if = { limit = { has_trait = leader_trait_governor_psionic } prev = { add_modifier = { modifier = country_memorialized_governor_psionic } } }
		if = { limit = { has_trait = leader_trait_governor_chosen } prev = { add_modifier = { modifier = country_memorialized_governor_chosen } } }
		if = { limit = { has_trait = leader_trait_righteous } prev = { add_modifier = { modifier = country_memorialized_governor_righteous } } }
		if = { limit = { has_trait = leader_trait_corrupt } prev = { add_modifier = { modifier = country_memorialized_governor_corrupt years = 5 } } }
		if = { limit = { has_trait = leader_trait_warbot_tinkerer } prev = { add_modifier = { modifier = country_memorialized_governor_warbot_tinkerer } } }
		if = { limit = { has_trait = leader_trait_ai_aided_design } prev = { add_modifier = { modifier = country_memorialized_governor_ai_aided_design } } }
		if = { limit = { has_trait = leader_trait_bulldozer } prev = { add_modifier = { modifier = country_memorialized_governor_bulldozer } } }
		if = { limit = { has_trait = leader_trait_analytical } prev = { add_modifier = { modifier = country_memorialized_governor_analytical } } }
		if = { limit = { has_trait = leader_trait_governor_brainslug } prev = { add_modifier = { modifier = country_memorialized_governor_brainslug } } }
		if = { limit = { has_trait = leader_trait_governor_gray } prev = { add_modifier = { modifier = country_memorialized_governor_gray } } }
		if = { limit = { has_trait = leader_trait_enclave_trader } prev = { add_modifier = { modifier = country_memorialized_governor_enclave_trader } } }
		if = { limit = { has_trait = leader_trait_waste_management_specialist } prev = { add_modifier = { modifier = country_memorialized_governor_waste_management_specialist } } }
		if = { limit = { has_trait = leader_trait_nuumismatic_priest } prev = { add_modifier = { modifier = country_memorialized_governor_nuumismatic_priest } } }
		if = { limit = { has_trait = leader_trait_governor_oracle } prev = { add_modifier = { modifier = country_memorialized_governor_oracle } } }
		if = { limit = { has_trait = leader_trait_curator } prev = { add_modifier = { modifier = country_memorialized_scientist_curator } } }
		if = { limit = { has_trait = leader_trait_scientist_erudite } prev = { add_modifier = { modifier = country_memorialized_scientist_erudite } } }
		if = { limit = { has_trait = leader_trait_scientist_cyborg } prev = { add_modifier = { modifier = country_memorialized_scientist_cyborg } } }
		if = { limit = { has_trait = leader_trait_scientist_synthetic } prev = { add_modifier = { modifier = country_memorialized_scientist_synthetic } } }
		if = { limit = { has_trait = leader_trait_scientist_psionic } prev = { add_modifier = { modifier = country_memorialized_scientist_psionic } } }
		if = { limit = { has_trait = leader_trait_scientist_chosen } prev = { add_modifier = { modifier = country_memorialized_scientist_chosen } } }
		if = { limit = { has_trait = leader_trait_cataloger } prev = { add_modifier = { modifier = country_memorialized_scientist_cataloger } } }
		if = { limit = { has_trait = leader_trait_scientist_brainslug } prev = { add_modifier = { modifier = country_memorialized_scientist_brainslug } } }
		# if = { limit = { has_trait = leader_trait_traumatized } prev = { add_modifier = { modifier = country_memorialized_scientist_traumatized } } }
		if = { limit = { has_trait = leader_trait_maimed } prev = { add_modifier = { modifier = country_memorialized_scientist_maimed } } }
		if = { limit = { has_trait = leader_trait_inspired_archaeologist } prev = { add_modifier = { modifier = country_memorialized_scientist_inspired_archaeologist } } }
		if = { limit = { has_trait = leader_trait_inspired_researcher } prev = { add_modifier = { modifier = country_memorialized_scientist_inspired_researcher } } }
		if = { limit = { has_trait = leader_trait_inspired_surveyor } prev = { add_modifier = { modifier = country_memorialized_scientist_inspired_surveyor } } }
		if = { limit = { has_trait = leader_trait_dragonslayer } prev = { add_modifier = { modifier = country_memorialized_admiral_dragonslayer } } }
		if = { limit = { has_trait = leader_trait_admiral_erudite } prev = { add_modifier = { modifier = country_memorialized_admiral_erudite } } }
		if = { limit = { has_trait = leader_trait_admiral_cyborg } prev = { add_modifier = { modifier = country_memorialized_admiral_cyborg } } }
		if = { limit = { has_trait = leader_trait_admiral_synthetic } prev = { add_modifier = { modifier = country_memorialized_admiral_synthetic } } }
		if = { limit = { has_trait = leader_trait_admiral_psionic } prev = { add_modifier = { modifier = country_memorialized_admiral_psionic } } }
		if = { limit = { has_trait = leader_trait_admiral_chosen } prev = { add_modifier = { modifier = country_memorialized_admiral_chosen } } }
		if = { limit = { has_trait = leader_trait_mercenary_warrior } prev = { add_modifier = { modifier = country_memorialized_admiral_mercenary_warrior } } }
		if = { limit = { has_trait = leader_trait_foredoomed_to_a_rendezvous } prev = { add_modifier = { modifier = country_memorialized_admiral_foredoomed_to_a_rendezvous } } }
		if = { limit = { has_trait = leader_trait_maintenance_loop } prev = { add_modifier = { modifier = country_memorialized_admiral_maintenance_loop } } }
		if = { limit = { has_trait = leader_trait_unstable_code_base } prev = { add_modifier = { modifier = country_memorialized_admiral_unstable_code_base } } }
		if = { limit = { has_trait = leader_trait_restore_point } prev = { add_modifier = { modifier = country_memorialized_admiral_restore_point } } }
		if = { limit = { has_trait = leader_trait_admiral_brainslug } prev = { add_modifier = { modifier = country_memorialized_admiral_brainslug } } }
		if = { limit = { has_trait = leader_trait_admiral_hells_heart } prev = { add_modifier = { modifier = country_memorialized_admiral_hells_heart } } }
		if = { limit = { has_trait = leader_trait_caravan_counter } prev = { add_modifier = { modifier = country_memorialized_admiral_caravan_counter } } }
		if = { limit = { has_trait = leader_trait_general_erudite } prev = { add_modifier = { modifier = country_memorialized_general_erudite } } }
		if = { limit = { has_trait = leader_trait_general_cyborg } prev = { add_modifier = { modifier = country_memorialized_general_cyborg } } }
		if = { limit = { has_trait = leader_trait_general_synthetic } prev = { add_modifier = { modifier = country_memorialized_general_synthetic } } }
		if = { limit = { has_trait = leader_trait_general_psionic } prev = { add_modifier = { modifier = country_memorialized_general_psionic } } }
		if = { limit = { has_trait = leader_trait_general_chosen } prev = { add_modifier = { modifier = country_memorialized_general_chosen } } }
		if = { limit = { has_trait = leader_trait_general_mercenary_warrior } prev = { add_modifier = { modifier = country_memorialized_general_mercenary_warrior } } }
		if = { limit = { has_trait = leader_trait_parts_cannibalizer } prev = { add_modifier = { modifier = country_memorialized_general_parts_cannibalizer } } }
		if = { limit = { has_trait = leader_trait_demoralizer } prev = { add_modifier = { modifier = country_memorialized_general_demoralizer } } }
		if = { limit = { has_trait = leader_trait_erratic_morality_core } prev = { add_modifier = { modifier = country_memorialized_general_erratic_morality_core } } }
		if = { limit = { has_trait = leader_trait_general_brainslug } prev = { add_modifier = { modifier = country_memorialized_general_brainslug } } }
		### Achievement Modifiers
		# Ruler Achievements
		if = { limit = { has_leader_flag = first_ruler } prev = { add_modifier = { modifier = country_memorialized_ruler_achievement_starting_ruler } } }
		if = { limit = { has_leader_flag = honor_leader_ruler_first_contact prev = { has_policy_flag = first_contact_cautious } } prev = { add_modifier = { modifier = country_memorialized_ruler_achievement_first_contact_peaceful } } }
		else_if = { limit = { has_leader_flag = honor_leader_ruler_first_contact prev = { has_policy_flag = first_contact_attack_allowed } } prev = { add_modifier = { modifier = country_memorialized_ruler_achievement_first_contact_aggressive } } }
		if = { limit = { has_leader_flag = honor_leader_ruler_communications_established } prev = { add_modifier = { modifier = country_memorialized_ruler_achievement_communications_established } } }
		if = { limit = { has_leader_flag = honor_leader_ruler_allowed_rebels } prev = { add_modifier = { modifier = country_memorialized_ruler_achievement_allowed_rebels } } }
		if = { limit = { has_leader_flag = honor_leader_ruler_banned_ai prev = { has_policy_flag = ai_outlawed } } prev = { add_modifier = { modifier = country_memorialized_ruler_achievement_banned_ai } } }
		if = { limit = { has_leader_flag = honor_leader_ruler_banned_robots prev = { has_policy_flag = robots_outlawed } } prev = { add_modifier = { modifier = country_memorialized_ruler_achievement_banned_robots } } }
		if = { limit = { has_leader_flag = honor_leader_ruler_commissioned_new_ship_design } prev = { add_modifier = { modifier = country_memorialized_ruler_achievement_commissioned_new_ship_design } } }
		if = { limit = { has_leader_flag = honor_leader_ruler_defensive_only prev = { has_policy_flag = no_wars } } prev = { add_modifier = { modifier = country_memorialized_ruler_achievement_defensive_only } } }
		if = { limit = { has_leader_flag = honor_leader_ruler_destroyer_of_nations } prev = { add_modifier = { modifier = country_memorialized_ruler_achievement_destroyer_of_nations } } }
		if = { limit = { check_variable = { which = honor_leader_new_systems_claimed value > 10 } } prev = { add_modifier = { modifier = country_memorialized_ruler_achievement_new_territory_expansionist } } }
		if = { limit = { has_leader_flag = honor_leader_ruler_gained_territory } prev = { add_modifier = { modifier = country_memorialized_ruler_achievement_gained_territory } } }
		if = { limit = { check_variable = { which = honor_leader_systems_gained value > 10 } } prev = { add_modifier = { modifier = country_memorialized_ruler_achievement_territory_expansionist } } }
		if = { limit = { has_leader_flag = honor_leader_ruler_lost_territory } prev = { add_modifier = { modifier = country_memorialized_ruler_achievement_lost_territory } } }
		if = { limit = { has_leader_flag = honor_leader_ruler_purge_allowed prev = { has_policy_flag = purge_allowed } } prev = { add_modifier = { modifier = country_memorialized_ruler_achievement_purge_allowed } } }
		else_if = { limit = { has_leader_flag = honor_leader_ruler_purge_not_allowed prev = { has_policy_flag = purge_not_allowed } } prev = { add_modifier = { modifier = country_memorialized_ruler_achievement_purge_not_allowed } } }
		if = { limit = { has_leader_flag = honor_leader_ruler_refugees_allowed prev = { has_policy_flag = refugees_allowed } } prev = { add_modifier = { modifier = country_memorialized_ruler_achievement_refugees_allowed } } }
		else_if = { limit = { has_leader_flag = honor_leader_ruler_refugees_not_allowed prev = { has_policy_flag = refugees_not_allowed } } prev = { add_modifier = { modifier = country_memorialized_ruler_achievement_refugees_not_allowed } } }
		if = { limit = { has_leader_flag = honor_leader_ruler_slavery_not_allowed prev = { has_policy_flag = slavery_allowed } } prev = { add_modifier = { modifier = country_memorialized_ruler_achievement_slavery_allowed } } }
		else_if = { limit = { has_leader_flag = honor_leader_ruler_slavery_not_allowed prev = { has_policy_flag = slavery_not_allowed } } prev = { add_modifier = { modifier = country_memorialized_ruler_achievement_slavery_not_allowed } } }
		if = { limit = { has_leader_flag = honor_leader_ruler_species_drugged } prev = { add_modifier = { modifier = country_memorialized_ruler_achievement_species_drugged } } }
		if = { limit = { has_leader_flag = honor_leader_ruler_species_enslaved } prev = { add_modifier = { modifier = country_memorialized_ruler_achievement_species_enslaved } } }
		if = { limit = { has_leader_flag = honor_leader_ruler_species_given_citizenship } prev = { add_modifier = { modifier = country_memorialized_ruler_achievement_species_given_citizenship } } }
		if = { limit = { has_leader_flag = honor_leader_ruler_species_purging } prev = { add_modifier = { modifier = country_memorialized_ruler_achievement_species_purging } } }
		if = { limit = { has_leader_flag = honor_leader_ruler_unrestricted_wars prev = { has_policy_flag = unrestricted_wars } } prev = { add_modifier = { modifier = country_memorialized_ruler_achievement_unrestricted_wars } } }
		if = { limit = { has_leader_flag = honor_leader_ruler_uplift } prev = { add_modifier = { modifier = country_memorialized_ruler_achievement_uplift } } }
		if = { limit = { has_leader_flag = honor_leader_ruler_changed_policy } prev = { add_modifier = { modifier = country_memorialized_ruler_achievement_changed_policy } } }
		if = { limit = { has_leader_flag = honor_leader_ruler_changed_species_rights } prev = { add_modifier = { modifier = country_memorialized_ruler_achievement_changed_species_rights } } }
		if = { limit = { check_variable = { which = honor_leader_systems_discovered value > 25 } } prev = { add_modifier = { modifier = country_memorialized_ruler_achievement_great_explorer } } }
		if = { limit = { has_leader_flag = honor_leader_ruler_purged_pops } prev = { add_modifier = { modifier = country_memorialized_ruler_achievement_purged_pops } } }
		if = { limit = { check_variable = { which = honor_leader_pops_purged value > 50 } } prev = { add_modifier = { modifier = country_memorialized_ruler_achievement_purged_pops_many } } }
		if = { limit = { has_leader_flag = honor_leader_ruler_purged_species_from_galaxy } prev = { add_modifier = { modifier = country_memorialized_ruler_achievement_purged_species_from_galaxy } } }
		if = { limit = { check_variable = { which = honor_leader_species_purged value > 10 } } prev = { add_modifier = { modifier = country_memorialized_ruler_achievement_purged_species_many } } }
		if = { limit = { has_leader_flag = honor_leader_ruler_slumlord } prev = { add_modifier = { modifier = country_memorialized_ruler_achievement_slumlord } } }
		# Governor
		if = { limit = { check_variable = { which = honor_leader_civilian_ships_built value > 10 } } prev = { add_modifier = { modifier = country_memorialized_governor_achievement_civilian_buildup } } }
		if = { limit = { check_variable = { which = honor_leader_mining_stations_built value > 10 } } prev = { add_modifier = { modifier = country_memorialized_governor_achievement_mining_expansionist } } }
		if = { limit = { check_variable = { which = honor_leader_research_stations_built value > 10 } } prev = { add_modifier = { modifier = country_memorialized_governor_achievement_research_expansionist } } }
		if = { limit = { check_variable = { which = honor_leader_observation_stations_built value > 2 } } prev = { add_modifier = { modifier = country_memorialized_governor_achievement_observation_expansionist } } }
		if = { limit = { check_variable = { which = honor_leader_colonies_started value > 4 } } prev = { add_modifier = { modifier = country_memorialized_governor_achievement_colonization_wave } } }
		if = { limit = { check_variable = { which = honor_leader_colonies_founded value > 4 } } prev = { add_modifier = { modifier = country_memorialized_governor_achievement_colony_founder } } }
		if = { limit = { check_variable = { which = honor_leader_blockers_cleared value > 10 } } prev = { add_modifier = { modifier = country_memorialized_governor_achievement_terrain_leveler } } }
		if = { limit = { check_variable = { which = honor_leader_pops_grown value > 50 } } prev = { add_modifier = { modifier = country_memorialized_governor_achievement_pops_flourishing } } }
		if = { limit = { check_variable = { which = honor_leader_buildings_constructed value > 10 } } prev = { add_modifier = { modifier = country_memorialized_governor_achievement_edifice_constructor } } }
		if = { limit = { check_variable = { which = honor_leader_districts_constructed value > 20 } } prev = { add_modifier = { modifier = country_memorialized_governor_achievement_district_constructor } } }
		if = { limit = { check_variable = { which = honor_leader_military_ships_built value > 25 } } prev = { add_modifier = { modifier = country_memorialized_governor_achievement_military_buildup } } }
		if = { limit = { check_variable = { which = honor_leader_armies_recruited value > 15 } } prev = { add_modifier = { modifier = country_memorialized_governor_achievement_recruitment_drive } } }
		if = { limit = { has_leader_flag = honor_leader_governor_allowed_rebels } prev = { add_modifier = { modifier = country_memorialized_governor_achievement_allowed_rebels } } }
		if = { limit = { has_leader_flag = honor_leader_governor_fully_developed_buildings } prev = { add_modifier = { modifier = country_memorialized_governor_achievement_fully_developed_buildings } } }
		if = { limit = { has_leader_flag = honor_leader_governor_fully_developed_districts } prev = { add_modifier = { modifier = country_memorialized_governor_achievement_fully_developed_districts } } }
		if = { limit = { has_leader_flag = honor_leader_governor_fully_developed_planet } prev = { add_modifier = { modifier = country_memorialized_governor_achievement_fully_developed_planet } } }
		if = { limit = { has_leader_flag = honor_leader_governor_purged_pops } prev = { add_modifier = { modifier = country_memorialized_governor_achievement_purged_pops } } }
		if = { limit = { check_variable = { which = honor_leader_pops_purged value > 50 } } prev = { add_modifier = { modifier = country_memorialized_governor_achievement_purged_pops_many } } }
		if = { limit = { has_leader_flag = honor_leader_governor_purged_species_from_galaxy } prev = { add_modifier = { modifier = country_memorialized_governor_achievement_purged_species_from_galaxy } } }
		if = { limit = { check_variable = { which = honor_leader_species_purged value > 10 } } prev = { add_modifier = { modifier = country_memorialized_governor_achievement_purged_species_many } } }
		if = { limit = { has_leader_flag = honor_leader_governor_slumlord } prev = { add_modifier = { modifier = country_memorialized_governor_achievement_slumlord } } }
		# Scientist
		if = { limit = { check_variable = { which = honor_leader_evaded_hostiles value > 10 } } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_survivor } } }
		if = { limit = { check_variable = { which = honor_leader_systems_discovered value > 15 } } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_grand_explorer } } }
		if = { limit = { check_variable = { which = honor_leader_objects_surveyed value > 150 } } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_expert_rock_turner } } }
		if = { limit = { check_variable = { which = honor_leader_systems_surveyed value > 10 } } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_system_surveyor } } }
		if = { limit = { check_variable = { which = honor_leader_anomalies_researched value > 10 } } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_anomalist } } }
		if = { limit = { check_variable = { which = honor_leader_special_projects_researched value > 10 } } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_project_manager } } }
		if = { limit = { check_variable = { which = honor_leader_years_assisting_research value > 10 } } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_research_assistant } } }
		if = { limit = { check_variable = { which = honor_leader_physics_techs_researched value > 10 } } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_physics_researcher } } }
		if = { limit = { check_variable = { which = honor_leader_society_techs_researched value > 10 } } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_society_researcher } } }
		if = { limit = { check_variable = { which = honor_leader_engineering_techs_researched value > 10 } } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_engineering_researcher } } }
		# Scientist Discoveries
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_automated_exploration } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_automated_exploration } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_cold_fusion_power } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_cold_fusion_power } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_wormhole_stabilization } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_wormhole_stabilization } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_jump_drive_1 } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_jump_drive_1 } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_ftl_inhibitor } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_ftl_inhibitor } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_combat_computers_3 } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_combat_computers_3 } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_synchronized_defences } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_synchronized_defences } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_planetary_shield_generator } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_planetary_shield_generator } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_mine_volatile_motes } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_mine_volatile_motes } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_mine_dark_matter } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_mine_dark_matter } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_lasers_2 } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_lasers_2 } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_extradimensional_weapon_1 } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_extradimensional_weapon_1 } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_mining_drone_weapon_1 } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_mining_drone_weapon_1 } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_space_cloud_weapon_1 } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_space_cloud_weapon_1 } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_null_void_beam } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_null_void_beam } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_dark_matter_deflector } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_dark_matter_deflector } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_dark_matter_power_core } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_dark_matter_power_core } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_psionic_barrier } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_psionic_barrier } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_space_whale_weapon_1 } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_space_whale_weapon_1 } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_galactic_markets } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_galactic_markets } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_nutrient_replication } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_nutrient_replication } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_tomb_world_adaption } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_tomb_world_adaption } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_gene_banks } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_gene_banks } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_morphogenetic_field_mastery } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_morphogenetic_field_mastery } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_genetic_resequencing } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_genetic_resequencing } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_gene_expressions } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_gene_expressions } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_selected_lineages } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_selected_lineages } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_capacity_boosters } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_capacity_boosters } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_regenerative_hull_tissue } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_regenerative_hull_tissue } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_psionic_theory } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_psionic_theory } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_subdermal_stimulation } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_subdermal_stimulation } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_ascension_theory } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_ascension_theory } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_penal_colonies } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_penal_colonies } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_resort_colonies } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_resort_colonies } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_epigenetic_triggers } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_epigenetic_triggers } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_gene_tailoring } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_gene_tailoring } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_terrestrial_sculpting } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_terrestrial_sculpting } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_ecological_adaptation } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_ecological_adaptation } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_climate_restoration } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_climate_restoration } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_neural_implants } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_neural_implants } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_galactic_administration } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_galactic_administration } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_mine_zro } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_mine_zro } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_corvette_hull_2 } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_corvette_hull_2 } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_destroyer_hull_2 } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_destroyer_hull_2 } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_cruiser_hull_2 } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_cruiser_hull_2 } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_battleship_hull_2 } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_battleship_hull_2 } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_defense_platform_hull_1 } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_defense_platform_hull_1 } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_modular_engineering } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_modular_engineering } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_space_defense_station_improvement } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_space_defense_station_improvement } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_crystal_armor_1 } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_crystal_armor_1 } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_crystal_armor_2 } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_crystal_armor_2 } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_robotic_workers } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_robotic_workers } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_droid_workers } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_droid_workers } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_synthetic_workers } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_synthetic_workers } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_construction_templates } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_construction_templates } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_starbase_5 } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_starbase_5 } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_housing_1 } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_housing_1 } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_housing_2 } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_housing_2 } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_dark_matter_propulsion } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_dark_matter_propulsion } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_mine_living_metal } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_mine_living_metal } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_mine_betharian } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_mine_betharian } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_mine_exotic_gases } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_mine_exotic_gases } } }
		if = { limit = { has_leader_flag = honor_leader_scientist_discovered_mine_rare_crystals } prev = { add_modifier = { modifier = country_memorialized_scientist_achievement_discovered_mine_rare_crystals } } }
		# Admiral
		if = { limit = { check_variable = { which = honor_leader_ships_lost value > 50 } } prev = { add_modifier = { modifier = country_memorialized_admiral_achievement_cursed_command } } }
		if = { limit = { check_variable = { which = honor_leader_ships_destroyed value > 100 } } prev = { add_modifier = { modifier = country_memorialized_admiral_achievement_skilled_combat_veteran } } }
		if = { limit = { check_variable = { which = honor_leader_space_critters_destroyed value > 100 } } prev = { add_modifier = { modifier = country_memorialized_admiral_achievement_exterminator } } }
		if = { limit = { check_variable = { which = honor_leader_pirate_ships_destroyed value > 100 } } prev = { add_modifier = { modifier = country_memorialized_admiral_achievement_pirate_cleanser } } }
		if = { limit = { check_variable = { which = honor_leader_crisis_ships_destroyed value > 100 } } prev = { add_modifier = { modifier = country_memorialized_admiral_achievement_hero_of_the_galaxy } } }
		if = { limit = { check_variable = { which = honor_leader_fleets_destroyed value > 100 } } prev = { add_modifier = { modifier = country_memorialized_admiral_achievement_red_death } } }
		if = { limit = { has_leader_flag = honor_leader_admiral_undefeated } prev = { add_modifier = { modifier = country_memorialized_admiral_achievement_undefeated } } }
		if = { limit = { check_variable = { which = honor_leader_days_bombarding_planet value > 365 } } prev = { add_modifier = { modifier = country_memorialized_admiral_achievement_orbital_bombarder } } }
		if = { limit = { check_variable = { which = honor_leader_space_battles_fought value > 25 } } prev = { add_modifier = { modifier = country_memorialized_admiral_achievement_seasoned_veteran } } }
		if = { limit = { check_variable = { which = honor_leader_years_orbital_training_excersises value > 25 } leader_class = admiral } prev = { add_modifier = { modifier = country_memorialized_admiral_achievement_desk_admiral } } }
		if = { limit = { has_leader_flag = honor_leader_admiral_eradicated_colony } prev = { add_modifier = { modifier = country_memorialized_admiral_achievement_eradicated_colony } } }
		# General
		if = { limit = { check_variable = { which = honor_leader_years_orbital_training_excersises value > 25 } leader_class = general } prev = { add_modifier = { modifier = country_memorialized_general_achievement_desk_general_orbit } } }
		if = { limit = { check_variable = { which = honor_leader_years_planet_training_excersises value > 25 } } prev = { add_modifier = { modifier = country_memorialized_general_achievement_desk_general_planet } } }
		if = { limit = { has_leader_flag = honor_leader_general_undefeated } prev = { add_modifier = { modifier = country_memorialized_general_achievement_undefeated } } }
		if = { limit = { check_variable = { which = honor_leader_ground_combats_won value > 10 } } prev = { add_modifier = { modifier = country_memorialized_general_achievement_seasoned } } }
		if = { limit = { has_leader_flag = honor_leader_general_leveled_a_planet } prev = { add_modifier = { modifier = country_memorialized_general_achievement_total_war } } }
	}
}
# TODO: Save leader using the create_saved_leader function-(key-based)- may need to rewrite if a better clone function exists.
# This = event_target:honor_leader
# Prev = event_target:honor_leader_country
honor_leader_save_leader = {
	species = { save_event_target_as = honor_leader_species }
	if = { limit = { gender = female } set_variable = { which = honor_leader_gender value = 1 } }
	# else_if = { limit = { gender = male } set_variable = { which = honor_leader_gender value = 2 }
	# indeterminable still not used
	else = { set_variable = { which = honor_leader_gender value = 2 } }
	if = { limit = { NOT = { is_variable_set = honor_leader_skill } }
		export_trigger_value_to_variable = { trigger = has_level variable = honor_leader_skill }
	}
	switch = {
		trigger = leader_class
		ruler = {
			# Add time effects if not dead.
			# if = { limit = { NOT = { has_leader_flag = honor_leader_dead_leader } }
			# 	set_variable = { which = honor_leader_calender_year value = owner.honor_leader_calender_year }
			# 	set_variable = { which = honor_leader_office_end value = honor_leader_calender_year }
			# }
			# set_variable = { which = honor_leader_class value = 1 }
			prev = {
				inverted_switch = {
					trigger = has_country_flag
					honor_leader_has_dead_ruler1 = {
						create_saved_leader = {
							creator = this
							key = honor_ruler1_stored
							event_leader = no
							class = ruler
							species = event_target:honor_leader_species
							name = prev
							skill = 1
							traits = { trait = trait_ruler_eye_for_talent }
							gender = male
							set_age = 21
							effect = {
								# Remove for empty trait set.
								remove_trait = trait_ruler_eye_for_talent
								# Dead Leader Flags
								set_leader_flag = honor_leader_dead_leader
								set_leader_flag = honor_ruler1
								# Copy Vars and flags
								honor_leader_copy_flags_and_vars = yes
								# Add Traits
								honor_leader_add_traits = yes
							}
						}
						# Lets us know this saved leader exists- create_saved_leader has no lookup without activiating and removing the key.
						set_country_flag = honor_leader_has_dead_ruler1
					}
					honor_leader_has_dead_ruler2 = {
						create_saved_leader = {
							creator = this
							key = honor_ruler2_stored
							event_leader = no
							class = ruler
							species = event_target:honor_leader_species
							name = prev
							skill = 1
							traits = { trait = trait_ruler_eye_for_talent }
							gender = male
							set_age = 21
							effect = {
								# Remove for empty trait set.
								remove_trait = trait_ruler_eye_for_talent
								# Dead Leader Flags
								set_leader_flag = honor_leader_dead_leader
								set_leader_flag = honor_ruler2
								# Copy Vars and flags
								honor_leader_copy_flags_and_vars = yes
								# Add Traits
								honor_leader_add_traits = yes
							}
						}
						# Lets us know this saved leader exists- create_saved_leader has no lookup without activiating and removing the key.
						set_country_flag = honor_leader_has_dead_ruler2
					}
					honor_leader_has_dead_ruler3 = {
						create_saved_leader = {
							creator = this
							key = honor_ruler3_stored
							event_leader = no
							class = ruler
							species = event_target:honor_leader_species
							name = prev
							skill = 1
							traits = { trait = trait_ruler_eye_for_talent }
							gender = male
							set_age = 21
							effect = {
								# Remove for empty trait set.
								remove_trait = trait_ruler_eye_for_talent
								# Dead Leader Flags
								set_leader_flag = honor_leader_dead_leader
								set_leader_flag = honor_ruler3
								# Copy Vars and flags
								honor_leader_copy_flags_and_vars = yes
								# Add Traits
								honor_leader_add_traits = yes
							}
						}
						# Lets us know this saved leader exists- create_saved_leader has no lookup without activiating and removing the key.
						set_country_flag = honor_leader_has_dead_ruler3
					}
					honor_leader_has_dead_ruler4 = {
						create_saved_leader = {
							creator = this
							key = honor_ruler4_stored
							event_leader = no
							class = ruler
							species = event_target:honor_leader_species
							name = prev
							skill = 1
							traits = { trait = trait_ruler_eye_for_talent }
							gender = male
							set_age = 21
							effect = {
								# Remove for empty trait set.
								remove_trait = trait_ruler_eye_for_talent
								# Dead Leader Flags
								set_leader_flag = honor_leader_dead_leader
								set_leader_flag = honor_ruler4
								# Copy Vars and flags
								honor_leader_copy_flags_and_vars = yes
								# Add Traits
								honor_leader_add_traits = yes
							}
						}
						# Lets us know this saved leader exists- create_saved_leader has no lookup without activiating and removing the key.
						set_country_flag = honor_leader_has_dead_ruler4
					}
					honor_leader_has_dead_ruler5 = {
						create_saved_leader = {
							creator = this
							key = honor_ruler5_stored
							event_leader = no
							class = ruler
							species = event_target:honor_leader_species
							name = prev
							skill = 1
							traits = { trait = trait_ruler_eye_for_talent }
							gender = male
							set_age = 21
							effect = {
								# Remove for empty trait set.
								remove_trait = trait_ruler_eye_for_talent
								# Dead Leader Flags
								set_leader_flag = honor_leader_dead_leader
								set_leader_flag = honor_ruler5
								# Copy Vars and flags
								honor_leader_copy_flags_and_vars = yes
								# Add Traits
								honor_leader_add_traits = yes
							}
						}
						# Lets us know this saved leader exists- create_saved_leader has no lookup without activiating and removing the key.
						set_country_flag = honor_leader_has_dead_ruler5
					}
				}
			}
		}
		governor = {
			set_variable = { which = honor_leader_class value = 2 }
			prev = {
				inverted_switch = {
					trigger = has_country_flag
					honor_leader_has_dead_governor1 = {
						create_saved_leader = {
							creator = this
							key = honor_governor1_stored
							event_leader = no
							class = governor
							species = event_target:honor_leader_species
							name = prev
							skill = 1
							traits = { trait = leader_trait_resilient }
							gender = male
							set_age = 21
							effect = {
								# Remove for empty trait set.
								remove_trait = leader_trait_resilient
								# Dead Leader Flags
								set_leader_flag = honor_leader_dead_leader
								set_leader_flag = honor_governor1
								# Copy Vars and flags
								honor_leader_copy_flags_and_vars = yes
								# Add Traits
								honor_leader_add_traits = yes
							}
						}
						# Lets us know this saved leader exists- create_saved_leader has no lookup without activiating and removing the key.
						set_country_flag = honor_leader_has_dead_governor1
					}
					honor_leader_has_dead_governor2 = {
						create_saved_leader = {
							creator = this
							key = honor_governor2_stored
							event_leader = no
							class = governor
							species = event_target:honor_leader_species
							name = prev
							skill = 1
							traits = { trait = leader_trait_resilient }
							gender = male
							set_age = 21
							effect = {
								# Remove for empty trait set.
								remove_trait = leader_trait_resilient
								# Dead Leader Flags
								set_leader_flag = honor_leader_dead_leader
								set_leader_flag = honor_governor2
								# Copy Vars and flags
								honor_leader_copy_flags_and_vars = yes
								# Add Traits
								honor_leader_add_traits = yes
							}
						}
						# Lets us know this saved leader exists- create_saved_leader has no lookup without activiating and removing the key.
						set_country_flag = honor_leader_has_dead_governor2
					}
					honor_leader_has_dead_governor3 = {
						create_saved_leader = {
							creator = this
							key = honor_governor3_stored
							event_leader = no
							class = governor
							species = event_target:honor_leader_species
							name = prev
							skill = 1
							traits = { trait = leader_trait_resilient }
							gender = male
							set_age = 21
							effect = {
								# Remove for empty trait set.
								remove_trait = leader_trait_resilient
								# Dead Leader Flags
								set_leader_flag = honor_leader_dead_leader
								set_leader_flag = honor_governor3
								# Copy Vars and flags
								honor_leader_copy_flags_and_vars = yes
								# Add Traits
								honor_leader_add_traits = yes
							}
						}
						# Lets us know this saved leader exists- create_saved_leader has no lookup without activiating and removing the key.
						set_country_flag = honor_leader_has_dead_governor3
					}
					honor_leader_has_dead_governor4 = {
						create_saved_leader = {
							creator = this
							key = honor_governor4_stored
							event_leader = no
							class = governor
							species = event_target:honor_leader_species
							name = prev
							skill = 1
							traits = { trait = leader_trait_resilient }
							gender = male
							set_age = 21
							effect = {
								# Remove for empty trait set.
								remove_trait = leader_trait_resilient
								# Dead Leader Flags
								set_leader_flag = honor_leader_dead_leader
								set_leader_flag = honor_governor4
								# Copy Vars and flags
								honor_leader_copy_flags_and_vars = yes
								# Add Traits
								honor_leader_add_traits = yes
							}
						}
						# Lets us know this saved leader exists- create_saved_leader has no lookup without activiating and removing the key.
						set_country_flag = honor_leader_has_dead_governor4
					}
					honor_leader_has_dead_governor5 = {
						create_saved_leader = {
							creator = this
							key = honor_governor5_stored
							event_leader = no
							class = governor
							species = event_target:honor_leader_species
							name = prev
							skill = 1
							traits = { trait = leader_trait_resilient }
							gender = male
							set_age = 21
							effect = {
								# Remove for empty trait set.
								remove_trait = leader_trait_resilient
								# Dead Leader Flags
								set_leader_flag = honor_leader_dead_leader
								set_leader_flag = honor_governor5
								# Copy Vars and flags
								honor_leader_copy_flags_and_vars = yes
								# Add Traits
								honor_leader_add_traits = yes
							}
						}
						# Lets us know this saved leader exists- create_saved_leader has no lookup without activiating and removing the key.
						set_country_flag = honor_leader_has_dead_governor5
					}
				}
			}
		}
		scientist = {
			set_variable = { which = honor_leader_class value = 3 }
			prev = {
				inverted_switch = {
					trigger = has_country_flag
					honor_leader_has_dead_scientist1 = {
						create_saved_leader = {
							creator = this
							key = honor_scientist1_stored
							event_leader = no
							class = scientist
							species = event_target:honor_leader_species
							name = prev
							skill = 1
							traits = { trait = leader_trait_resilient }
							gender = male
							set_age = 21
							effect = {
								# Remove for empty trait set.
								remove_trait = leader_trait_resilient
								# Dead Leader Flags
								set_leader_flag = honor_leader_dead_leader
								set_leader_flag = honor_scientist1
								# Copy Vars and flags
								honor_leader_copy_flags_and_vars = yes
								# Add Traits
								honor_leader_add_traits = yes
							}
						}
						# Lets us know this saved leader exists- create_saved_leader has no lookup without activiating and removing the key.
						set_country_flag = honor_leader_has_dead_scientist1
					}
					honor_leader_has_dead_scientist2 = {
						create_saved_leader = {
							creator = this
							key = honor_scientist2_stored
							event_leader = no
							class = scientist
							species = event_target:honor_leader_species
							name = prev
							skill = 1
							traits = { trait = leader_trait_resilient }
							gender = male
							set_age = 21
							effect = {
								# Remove for empty trait set.
								remove_trait = leader_trait_resilient
								# Dead Leader Flags
								set_leader_flag = honor_leader_dead_leader
								set_leader_flag = honor_scientist2
								# Copy Vars and flags
								honor_leader_copy_flags_and_vars = yes
								# Add Traits
								honor_leader_add_traits = yes
							}
						}
						# Lets us know this saved leader exists- create_saved_leader has no lookup without activiating and removing the key.
						set_country_flag = honor_leader_has_dead_scientist2
					}
					honor_leader_has_dead_scientist3 = {
						create_saved_leader = {
							creator = this
							key = honor_scientist3_stored
							event_leader = no
							class = scientist
							species = event_target:honor_leader_species
							name = prev
							skill = 1
							traits = { trait = leader_trait_resilient }
							gender = male
							set_age = 21
							effect = {
								# Remove for empty trait set.
								remove_trait = leader_trait_resilient
								# Dead Leader Flags
								set_leader_flag = honor_leader_dead_leader
								set_leader_flag = honor_scientist3
								# Copy Vars and flags
								honor_leader_copy_flags_and_vars = yes
								# Add Traits
								honor_leader_add_traits = yes
							}
						}
						# Lets us know this saved leader exists- create_saved_leader has no lookup without activiating and removing the key.
						set_country_flag = honor_leader_has_dead_scientist3
					}
					honor_leader_has_dead_scientist4 = {
						create_saved_leader = {
							creator = this
							key = honor_scientist4_stored
							event_leader = no
							class = scientist
							species = event_target:honor_leader_species
							name = prev
							skill = 1
							traits = { trait = leader_trait_resilient }
							gender = male
							set_age = 21
							effect = {
								# Remove for empty trait set.
								remove_trait = leader_trait_resilient
								# Dead Leader Flags
								set_leader_flag = honor_leader_dead_leader
								set_leader_flag = honor_scientist4
								# Copy Vars and flags
								honor_leader_copy_flags_and_vars = yes
								# Add Traits
								honor_leader_add_traits = yes
							}
						}
						# Lets us know this saved leader exists- create_saved_leader has no lookup without activiating and removing the key.
						set_country_flag = honor_leader_has_dead_scientist4
					}
					honor_leader_has_dead_scientist5 = {
						create_saved_leader = {
							creator = this
							key = honor_scientist5_stored
							event_leader = no
							class = scientist
							species = event_target:honor_leader_species
							name = prev
							skill = 1
							traits = { trait = leader_trait_resilient }
							gender = male
							set_age = 21
							effect = {
								# Remove for empty trait set.
								remove_trait = leader_trait_resilient
								# Dead Leader Flags
								set_leader_flag = honor_leader_dead_leader
								set_leader_flag = honor_scientist5
								# Copy Vars and flags
								honor_leader_copy_flags_and_vars = yes
								# Add Traits
								honor_leader_add_traits = yes
							}
						}
						# Lets us know this saved leader exists- create_saved_leader has no lookup without activiating and removing the key.
						set_country_flag = honor_leader_has_dead_scientist5
					}
				}
			}
		}
		admiral = {
			set_variable = { which = honor_leader_class value = 4 }
			prev = {
				inverted_switch = {
					trigger = has_country_flag
					honor_leader_has_dead_admiral1 = {
						create_saved_leader = {
							creator = this
							key = honor_admiral1_stored
							event_leader = no
							class = admiral
							species = event_target:honor_leader_species
							name = prev
							skill = 1
							traits = { trait = leader_trait_resilient }
							gender = male
							set_age = 21
							effect = {
								# Remove for empty trait set.
								remove_trait = leader_trait_resilient
								# Dead Leader Flags
								set_leader_flag = honor_leader_dead_leader
								set_leader_flag = honor_admiral1
								# Copy Vars and flags
								honor_leader_copy_flags_and_vars = yes
								# Add Traits
								honor_leader_add_traits = yes
							}
						}
						# Lets us know this saved leader exists- create_saved_leader has no lookup without activiating and removing the key.
						set_country_flag = honor_leader_has_dead_admiral1
					}
					honor_leader_has_dead_admiral2 = {
						create_saved_leader = {
							creator = this
							key = honor_admiral2_stored
							event_leader = no
							class = admiral
							species = event_target:honor_leader_species
							name = prev
							skill = 1
							traits = { trait = leader_trait_resilient }
							gender = male
							set_age = 21
							effect = {
								# Remove for empty trait set.
								remove_trait = leader_trait_resilient
								# Dead Leader Flags
								set_leader_flag = honor_leader_dead_leader
								set_leader_flag = honor_admiral2
								# Copy Vars and flags
								honor_leader_copy_flags_and_vars = yes
								# Add Traits
								honor_leader_add_traits = yes
							}
						}
						# Lets us know this saved leader exists- create_saved_leader has no lookup without activiating and removing the key.
						set_country_flag = honor_leader_has_dead_admiral2
					}
					honor_leader_has_dead_admiral3 = {
						create_saved_leader = {
							creator = this
							key = honor_admiral3_stored
							event_leader = no
							class = admiral
							species = event_target:honor_leader_species
							name = prev
							skill = 1
							traits = { trait = leader_trait_resilient }
							gender = male
							set_age = 21
							effect = {
								# Remove for empty trait set.
								remove_trait = leader_trait_resilient
								# Dead Leader Flags
								set_leader_flag = honor_leader_dead_leader
								set_leader_flag = honor_admiral3
								# Copy Vars and flags
								honor_leader_copy_flags_and_vars = yes
								# Add Traits
								honor_leader_add_traits = yes
							}
						}
						# Lets us know this saved leader exists- create_saved_leader has no lookup without activiating and removing the key.
						set_country_flag = honor_leader_has_dead_admiral3
					}
					honor_leader_has_dead_admiral4 = {
						create_saved_leader = {
							creator = this
							key = honor_admiral4_stored
							event_leader = no
							class = admiral
							species = event_target:honor_leader_species
							name = prev
							skill = 1
							traits = { trait = leader_trait_resilient }
							gender = male
							set_age = 21
							effect = {
								# Remove for empty trait set.
								remove_trait = leader_trait_resilient
								# Dead Leader Flags
								set_leader_flag = honor_leader_dead_leader
								set_leader_flag = honor_admiral4
								# Copy Vars and flags
								honor_leader_copy_flags_and_vars = yes
								# Add Traits
								honor_leader_add_traits = yes
							}
						}
						# Lets us know this saved leader exists- create_saved_leader has no lookup without activiating and removing the key.
						set_country_flag = honor_leader_has_dead_admiral4
					}
					honor_leader_has_dead_admiral5 = {
						create_saved_leader = {
							creator = this
							key = honor_admiral5_stored
							event_leader = no
							class = admiral
							species = event_target:honor_leader_species
							name = prev
							skill = 1
							traits = { trait = leader_trait_resilient }
							gender = male
							set_age = 21
							effect = {
								# Remove for empty trait set.
								remove_trait = leader_trait_resilient
								# Dead Leader Flags
								set_leader_flag = honor_leader_dead_leader
								set_leader_flag = honor_admiral5
								# Copy Vars and flags
								honor_leader_copy_flags_and_vars = yes
								# Add Traits
								honor_leader_add_traits = yes
							}
						}
						# Lets us know this saved leader exists- create_saved_leader has no lookup without activiating and removing the key.
						set_country_flag = honor_leader_has_dead_admiral5
					}
				}
			}
		}
		general = {
			set_variable = { which = honor_leader_class value = 5 }
			prev = {
				inverted_switch = {
					trigger = has_country_flag
					honor_leader_has_dead_general1 = {
						create_saved_leader = {
							creator = this
							key = honor_general1_stored
							event_leader = no
							class = general
							species = event_target:honor_leader_species
							name = prev
							skill = 1
							traits = { trait = leader_trait_resilient }
							gender = male
							set_age = 21
							effect = {
								# Remove for empty trait set.
								remove_trait = leader_trait_resilient
								# Dead Leader Flags
								set_leader_flag = honor_leader_dead_leader
								set_leader_flag = honor_general1
								# Copy Vars and flags
								honor_leader_copy_flags_and_vars = yes
								# Add Traits
								honor_leader_add_traits = yes
							}
						}
						# Lets us know this saved leader exists- create_saved_leader has no lookup without activiating and removing the key.
						set_country_flag = honor_leader_has_dead_general1
					}
					honor_leader_has_dead_general2 = {
						create_saved_leader = {
							creator = this
							key = honor_general2_stored
							event_leader = no
							class = general
							species = event_target:honor_leader_species
							name = prev
							skill = 1
							traits = { trait = leader_trait_resilient }
							gender = male
							set_age = 21
							effect = {
								# Remove for empty trait set.
								remove_trait = leader_trait_resilient
								# Dead Leader Flags
								set_leader_flag = honor_leader_dead_leader
								set_leader_flag = honor_general2
								# Copy Vars and flags
								honor_leader_copy_flags_and_vars = yes
								# Add Traits
								honor_leader_add_traits = yes
							}
						}
						# Lets us know this saved leader exists- create_saved_leader has no lookup without activiating and removing the key.
						set_country_flag = honor_leader_has_dead_general2
					}
					honor_leader_has_dead_general3 = {
						create_saved_leader = {
							creator = this
							key = honor_general3_stored
							event_leader = no
							class = general
							species = event_target:honor_leader_species
							name = prev
							skill = 1
							traits = { trait = leader_trait_resilient }
							gender = male
							set_age = 21
							effect = {
								# Remove for empty trait set.
								remove_trait = leader_trait_resilient
								# Dead Leader Flags
								set_leader_flag = honor_leader_dead_leader
								set_leader_flag = honor_general3
								# Copy Vars and flags
								honor_leader_copy_flags_and_vars = yes
								# Add Traits
								honor_leader_add_traits = yes
							}
						}
						# Lets us know this saved leader exists- create_saved_leader has no lookup without activiating and removing the key.
						set_country_flag = honor_leader_has_dead_general3
					}
					honor_leader_has_dead_general4 = {
						create_saved_leader = {
							creator = this
							key = honor_general4_stored
							event_leader = no
							class = general
							species = event_target:honor_leader_species
							name = prev
							skill = 1
							traits = { trait = leader_trait_resilient }
							gender = male
							set_age = 21
							effect = {
								# Remove for empty trait set.
								remove_trait = leader_trait_resilient
								# Dead Leader Flags
								set_leader_flag = honor_leader_dead_leader
								set_leader_flag = honor_general4
								# Copy Vars and flags
								honor_leader_copy_flags_and_vars = yes
								# Add Traits
								honor_leader_add_traits = yes
							}
						}
						# Lets us know this saved leader exists- create_saved_leader has no lookup without activiating and removing the key.
						set_country_flag = honor_leader_has_dead_general4
					}
					honor_leader_has_dead_general5 = {
						create_saved_leader = {
							creator = this
							key = honor_general5_stored
							event_leader = no
							class = general
							species = event_target:honor_leader_species
							name = prev
							skill = 1
							traits = { trait = leader_trait_resilient }
							gender = male
							set_age = 21
							effect = {
								# Remove for empty trait set.
								remove_trait = leader_trait_resilient
								# Dead Leader Flags
								set_leader_flag = honor_leader_dead_leader
								set_leader_flag = honor_general5
								# Copy Vars and flags
								honor_leader_copy_flags_and_vars = yes
								# Add Traits
								honor_leader_add_traits = yes
							}
						}
						# Lets us know this saved leader exists- create_saved_leader has no lookup without activiating and removing the key.
						set_country_flag = honor_leader_has_dead_general5
					}
				}
			}
		}
	}
}
# Needs event_target:honor_leader = copy from
honor_leader_copy_flags_and_vars = {
	### Vars & Flags
	event_target:honor_leader = {
		export_trigger_value_to_variable = { trigger = leader_age variable = dead_leader_age }
		# Time
		if = { limit = { is_variable_set = honor_leader_years_of_service } prev = { set_variable = { which = honor_leader_years_of_service value = prev.honor_leader_years_of_service } } } else = { prev = { set_variable = { which = honor_leader_years_of_service value = 0 } } }
		# if = { limit = { is_variable_set = honor_leader_office_start } prev = { set_variable = { which = honor_leader_office_start value = prev.honor_leader_office_start } } } else = { prev = { set_variable = { which = honor_leader_office_start value = 0 } } }
		# if = { limit = { is_variable_set = honor_leader_office_end } prev = { set_variable = { which = honor_leader_office_end value = prev.honor_leader_office_end } } } else = { prev = { set_variable = { which = honor_leader_office_end value = 0 } } }
		if = { limit = { is_variable_set = hon_years_in_office } prev = { set_variable = { which = hon_years_in_office value = prev.hon_years_in_office } } } else = { prev = { set_variable = { which = hon_years_in_office value = 0 } } }
		if = { limit = { is_variable_set = honor_leader_years_assisting_research } prev = { set_variable = { which = honor_leader_years_assisting_research value = prev.honor_leader_years_assisting_research } } } else = { prev = { set_variable = { which = honor_leader_years_assisting_research value = 0 } } }
		if = { limit = { is_variable_set = honor_leader_years_exploring_automatically } prev = { set_variable = { which = honor_leader_years_exploring_automatically value = prev.honor_leader_years_exploring_automatically } } } else = { prev = { set_variable = { which = honor_leader_years_exploring_automatically value = 0 } } }
		if = { limit = { is_variable_set = honor_leader_years_governing_sector } prev = { set_variable = { which = honor_leader_years_governing_sector value = prev.honor_leader_years_governing_sector } } } else = { prev = { set_variable = { which = honor_leader_years_governing_sector value = 0 } } }
		if = { limit = { is_variable_set = honor_leader_years_orbital_training_excersises } prev = { set_variable = { which = honor_leader_years_orbital_training_excersises value = prev.honor_leader_years_orbital_training_excersises } } } else = { prev = { set_variable = { which = honor_leader_years_orbital_training_excersises value = 0 } } }
		if = { limit = { is_variable_set = honor_leader_years_planet_training_excersises } prev = { set_variable = { which = honor_leader_years_planet_training_excersises value = prev.honor_leader_years_planet_training_excersises } } } else = { prev = { set_variable = { which = honor_leader_years_planet_training_excersises value = 0 } } }
		# Bio
		if = { limit = { is_variable_set = honor_leader_elections_participated } prev = { set_variable = { which = honor_leader_elections_participated value = prev.honor_leader_elections_participated } } } else = { prev = { set_variable = { which = honor_leader_elections_participated value = 0 } } }
		if = { limit = { has_leader_flag = honor_leader_leader_in_election } prev = { set_leader_flag = honor_leader_leader_in_election } }
		# if = {
		# 	limit = {
		# 		# check_variable = { which = honor_leader_class value < 3 }
		# 		prev = { OR = { leader_class = ruler leader_class = governor } }
		# 	}
		if = { # Ruler check_variable = { which = honor_leader_class value = 1
			limit = {
				prev = {
					OR = {
						leader_class = ruler
						has_leader_flag = honor_leader_was_ruler
						is_variable_set = stints_as_ruler
					}
				}
			}
			if = { limit = { is_variable_set = honor_leader_policies_changed } prev = { set_variable = { which = honor_leader_policies_changed value = prev.honor_leader_policies_changed } } } else = { prev = { set_variable = { which = honor_leader_policies_changed value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_new_systems_claimed } prev = { set_variable = { which = honor_leader_new_systems_claimed value = prev.honor_leader_new_systems_claimed } } } else = { prev = { set_variable = { which = honor_leader_new_systems_claimed value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_first_contacts } prev = { set_variable = { which = honor_leader_first_contacts value = prev.honor_leader_first_contacts } } } else = { prev = { set_variable = { which = honor_leader_first_contacts value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_communications_established } prev = { set_variable = { which = honor_leader_communications_established value = prev.honor_leader_communications_established } } } else = { prev = { set_variable = { which = honor_leader_communications_established value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_defensive_wars_initiated } prev = { set_variable = { which = honor_leader_defensive_wars_initiated value = prev.honor_leader_defensive_wars_initiated } } } else = { prev = { set_variable = { which = honor_leader_defensive_wars_initiated value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_systems_lost } prev = { set_variable = { which = honor_leader_systems_lost value = prev.honor_leader_systems_lost } } } else = { prev = { set_variable = { which = honor_leader_systems_lost value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_colonies_lost } prev = { set_variable = { which = honor_leader_colonies_lost value = prev.honor_leader_colonies_lost } } } else = { prev = { set_variable = { which = honor_leader_colonies_lost value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_status_quo_result } prev = { set_variable = { which = honor_leader_status_quo_result value = prev.honor_leader_status_quo_result } } } else = { prev = { set_variable = { which = honor_leader_status_quo_result value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_ship_designs_commissioned } prev = { set_variable = { which = honor_leader_ship_designs_commissioned value = prev.honor_leader_ship_designs_commissioned } } } else = { prev = { set_variable = { which = honor_leader_ship_designs_commissioned value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_offensive_wars_initiated } prev = { set_variable = { which = honor_leader_offensive_wars_initiated value = prev.honor_leader_offensive_wars_initiated } } } else = { prev = { set_variable = { which = honor_leader_offensive_wars_initiated value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_systems_gained } prev = { set_variable = { which = honor_leader_systems_gained value = prev.honor_leader_systems_gained } } } else = { prev = { set_variable = { which = honor_leader_systems_gained value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_status_quo_forced_on } prev = { set_variable = { which = honor_leader_status_quo_forced_on value = prev.honor_leader_status_quo_forced_on } } } else = { prev = { set_variable = { which = honor_leader_status_quo_forced_on value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_planets_conquered } prev = { set_variable = { which = honor_leader_planets_conquered value = prev.honor_leader_planets_conquered } } } else = { prev = { set_variable = { which = honor_leader_planets_conquered value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_nations_destroyed } prev = { set_variable = { which = honor_leader_nations_destroyed value = prev.honor_leader_nations_destroyed } } } else = { prev = { set_variable = { which = honor_leader_nations_destroyed value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_pops_purged } prev = { set_variable = { which = honor_leader_pops_purged value = prev.honor_leader_pops_purged } } } else = { prev = { set_variable = { which = honor_leader_pops_purged value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_species_purged } prev = { set_variable = { which = honor_leader_species_purged value = prev.honor_leader_species_purged } } } else = { prev = { set_variable = { which = honor_leader_species_purged value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_times_reelected } prev = { set_variable = { which = honor_leader_times_reelected value = prev.honor_leader_times_reelected } } } else = { prev = { set_variable = { which = honor_leader_times_reelected value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_rights_changed } prev = { set_variable = { which = honor_leader_rights_changed value = prev.honor_leader_rights_changed } } } else = { prev = { set_variable = { which = honor_leader_rights_changed value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_planetary_populations_modified } prev = { set_variable = { which = honor_leader_planetary_populations_modified value = prev.honor_leader_planetary_populations_modified } } } else = { prev = { set_variable = { which = honor_leader_planetary_populations_modified value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_slaves_sold } prev = { set_variable = { which = honor_leader_slaves_sold value = prev.honor_leader_slaves_sold } } } else = { prev = { set_variable = { which = honor_leader_slaves_sold value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_slaves_bought } prev = { set_variable = { which = honor_leader_slaves_bought value = prev.honor_leader_slaves_bought } } } else = { prev = { set_variable = { which = honor_leader_slaves_bought value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_species_uplifted } prev = { set_variable = { which = honor_leader_species_uplifted value = prev.honor_leader_species_uplifted } } } else = { prev = { set_variable = { which = honor_leader_species_uplifted value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_planets_lost_to_rebels } prev = { set_variable = { which = honor_leader_planets_lost_to_rebels value = prev.honor_leader_planets_lost_to_rebels } } } else = { prev = { set_variable = { which = honor_leader_planets_lost_to_rebels value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_status_quo_forced_upon } prev = { set_variable = { which = honor_leader_status_quo_forced_upon value = prev.honor_leader_status_quo_forced_upon } } } else = { prev = { set_variable = { which = honor_leader_status_quo_forced_upon value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_wars_endured } prev = { set_variable = { which = honor_leader_wars_endured value = prev.honor_leader_wars_endured } } } else = { prev = { set_variable = { which = honor_leader_wars_endured value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_pirates_allowed } prev = { set_variable = { which = honor_leader_pirates_allowed value = prev.honor_leader_pirates_allowed } } } else = { prev = { set_variable = { which = honor_leader_pirates_allowed value = 0 } } }
			if = { limit = { has_leader_flag = first_ruler } prev = { set_leader_flag = first_ruler } }
			if = { limit = { has_leader_flag = honor_leader_ruler_allowed_pirates } prev = { set_leader_flag = honor_leader_ruler_allowed_pirates } }
			if = { limit = { has_leader_flag = honor_leader_ruler_allowed_pirates } prev = { set_leader_flag = honor_leader_ruler_allowed_pirates } }
			if = { limit = { has_leader_flag = honor_leader_ruler_allowed_rebels } prev = { set_leader_flag = honor_leader_ruler_allowed_rebels } }
			if = { limit = { has_leader_flag = honor_leader_ruler_banned_ai } prev = { set_leader_flag = honor_leader_ruler_banned_ai } }
			if = { limit = { has_leader_flag = honor_leader_ruler_banned_robots } prev = { set_leader_flag = honor_leader_ruler_banned_robots } }
			if = { limit = { has_leader_flag = honor_leader_ruler_changed_policy } prev = { set_leader_flag = honor_leader_ruler_changed_policy } }
			if = { limit = { has_leader_flag = honor_leader_ruler_changed_species_rights } prev = { set_leader_flag = honor_leader_ruler_changed_species_rights } }
			if = { limit = { has_leader_flag = honor_leader_ruler_commissioned_new_ship_design } prev = { set_leader_flag = honor_leader_ruler_commissioned_new_ship_design } }
			if = { limit = { has_leader_flag = honor_leader_ruler_communications_established } prev = { set_leader_flag = honor_leader_ruler_communications_established } }
			if = { limit = { has_leader_flag = honor_leader_ruler_defensive_only } prev = { set_leader_flag = honor_leader_ruler_defensive_only } }
			if = { limit = { has_leader_flag = honor_leader_ruler_destroyer_of_nations } prev = { set_leader_flag = honor_leader_ruler_destroyer_of_nations } }
			if = { limit = { has_leader_flag = honor_leader_ruler_first_contact } prev = { set_leader_flag = honor_leader_ruler_first_contact } }
			if = { limit = { has_leader_flag = honor_leader_ruler_fully_developed_buildings } prev = { set_leader_flag = honor_leader_ruler_fully_developed_buildings } }
			if = { limit = { has_leader_flag = honor_leader_ruler_fully_developed_districts } prev = { set_leader_flag = honor_leader_ruler_fully_developed_districts } }
			if = { limit = { has_leader_flag = honor_leader_ruler_fully_developed_planet } prev = { set_leader_flag = honor_leader_ruler_fully_developed_planet } }
			if = { limit = { has_leader_flag = honor_leader_ruler_gained_territory } prev = { set_leader_flag = honor_leader_ruler_gained_territory } }
			if = { limit = { has_leader_flag = honor_leader_ruler_in_election } prev = { set_leader_flag = honor_leader_ruler_in_election } }
			if = { limit = { has_leader_flag = honor_leader_ruler_lost_colony } prev = { set_leader_flag = honor_leader_ruler_lost_colony } }
			if = { limit = { has_leader_flag = honor_leader_ruler_lost_territory } prev = { set_leader_flag = honor_leader_ruler_lost_territory } }
			if = { limit = { has_leader_flag = honor_leader_ruler_purge_allowed } prev = { set_leader_flag = honor_leader_ruler_purge_allowed } }
			if = { limit = { has_leader_flag = honor_leader_ruler_purge_not_allowed } prev = { set_leader_flag = honor_leader_ruler_purge_not_allowed } }
			if = { limit = { has_leader_flag = honor_leader_ruler_purged_pops } prev = { set_leader_flag = honor_leader_ruler_purged_pops } }
			if = { limit = { has_leader_flag = honor_leader_ruler_purged_species_from_galaxy } prev = { set_leader_flag = honor_leader_ruler_purged_species_from_galaxy } }
			if = { limit = { has_leader_flag = honor_leader_ruler_refugees_allowed } prev = { set_leader_flag = honor_leader_ruler_refugees_allowed } }
			if = { limit = { has_leader_flag = honor_leader_ruler_refugees_not_allowed } prev = { set_leader_flag = honor_leader_ruler_refugees_not_allowed } }
			if = { limit = { has_leader_flag = honor_leader_ruler_slavery_allowed } prev = { set_leader_flag = honor_leader_ruler_slavery_allowed } }
			if = { limit = { has_leader_flag = honor_leader_ruler_slavery_not_allowed } prev = { set_leader_flag = honor_leader_ruler_slavery_not_allowed } }
			if = { limit = { has_leader_flag = honor_leader_ruler_slumlord } prev = { set_leader_flag = honor_leader_ruler_slumlord } }
			if = { limit = { has_leader_flag = honor_leader_ruler_species_drugged } prev = { set_leader_flag = honor_leader_ruler_species_drugged } }
			if = { limit = { has_leader_flag = honor_leader_ruler_species_enslaved } prev = { set_leader_flag = honor_leader_ruler_species_enslaved } }
			if = { limit = { has_leader_flag = honor_leader_ruler_species_given_citizenship } prev = { set_leader_flag = honor_leader_ruler_species_given_citizenship } }
			if = { limit = { has_leader_flag = honor_leader_ruler_species_modified } prev = { set_leader_flag = honor_leader_ruler_species_modified } }
			if = { limit = { has_leader_flag = honor_leader_ruler_species_purging } prev = { set_leader_flag = honor_leader_ruler_species_purging } }
			if = { limit = { has_leader_flag = honor_leader_ruler_unrestricted_wars } prev = { set_leader_flag = honor_leader_ruler_unrestricted_wars } }
			if = { limit = { has_leader_flag = honor_leader_ruler_uplift } prev = { set_leader_flag = honor_leader_ruler_uplift } }
			# DLC
			if = { limit = { is_variable_set = honor_leader_megastructures_built } prev = { set_variable = { which = honor_leader_megastructures_built value = prev.honor_leader_megastructures_built } } } else = { prev = { set_variable = { which = honor_leader_megastructures_built value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_colonies_eradicated } prev = { set_variable = { which = honor_leader_colonies_eradicated value = prev.honor_leader_colonies_eradicated } } } else = { prev = { set_variable = { which = honor_leader_colonies_eradicated value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_pops_abducted } prev = { set_variable = { which = honor_leader_pops_abducted value = prev.honor_leader_pops_abducted } } } else = { prev = { set_variable = { which = honor_leader_pops_abducted value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_times_used_colossus } prev = { set_variable = { which = honor_leader_times_used_colossus value = prev.honor_leader_times_used_colossus } } } else = { prev = { set_variable = { which = honor_leader_times_used_colossus value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_relics_activated } prev = { set_variable = { which = honor_leader_relics_activated value = prev.honor_leader_relics_activated } } } else = { prev = { set_variable = { which = honor_leader_relics_activated value = 0 } } }
			# prev = { set_variable = { which = honor_leader_class value = 1 } }
		}
		# Governor check_variable = { which = honor_leader_class value = 2 }
		if = {
			limit = {
				prev = {
					OR = {
						check_variable = { which = honor_leader_class value = 2 }
						leader_class = governor
					}
				}
			}
			if = { limit = { is_variable_set = honor_leader_blockers_cleared } prev = { set_variable = { which = honor_leader_blockers_cleared value = prev.honor_leader_blockers_cleared } } } else = { prev = { set_variable = { which = honor_leader_blockers_cleared value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_pops_grown } prev = { set_variable = { which = honor_leader_pops_grown value = prev.honor_leader_pops_grown } } } else = { prev = { set_variable = { which = honor_leader_pops_grown value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_synthetics_assembled } prev = { set_variable = { which = honor_leader_synthetics_assembled value = prev.honor_leader_synthetics_assembled } } } else = { prev = { set_variable = { which = honor_leader_synthetics_assembled value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_pops_resettled } prev = { set_variable = { which = honor_leader_pops_resettled value = prev.honor_leader_pops_resettled } } } else = { prev = { set_variable = { which = honor_leader_pops_resettled value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_pops_purged } prev = { set_variable = { which = honor_leader_pops_purged value = prev.honor_leader_pops_purged } } } else = { prev = { set_variable = { which = honor_leader_pops_purged value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_species_purged } prev = { set_variable = { which = honor_leader_species_purged value = prev.honor_leader_species_purged } } } else = { prev = { set_variable = { which = honor_leader_species_purged value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_buildings_constructed } prev = { set_variable = { which = honor_leader_buildings_constructed value = prev.honor_leader_buildings_constructed } } } else = { prev = { set_variable = { which = honor_leader_buildings_constructed value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_buildings_upgraded } prev = { set_variable = { which = honor_leader_buildings_upgraded value = prev.honor_leader_buildings_upgraded } } } else = { prev = { set_variable = { which = honor_leader_buildings_upgraded value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_buildings_replaced } prev = { set_variable = { which = honor_leader_buildings_replaced value = prev.honor_leader_buildings_replaced } } } else = { prev = { set_variable = { which = honor_leader_buildings_replaced value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_districts_constructed } prev = { set_variable = { which = honor_leader_districts_constructed value = prev.honor_leader_districts_constructed } } } else = { prev = { set_variable = { which = honor_leader_districts_constructed value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_civilian_ships_built } prev = { set_variable = { which = honor_leader_civilian_ships_built value = prev.honor_leader_civilian_ships_built } } } else = { prev = { set_variable = { which = honor_leader_civilian_ships_built value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_military_ships_built } prev = { set_variable = { which = honor_leader_military_ships_built value = prev.honor_leader_military_ships_built } } } else = { prev = { set_variable = { which = honor_leader_military_ships_built value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_mining_stations_built } prev = { set_variable = { which = honor_leader_mining_stations_built value = prev.honor_leader_mining_stations_built } } } else = { prev = { set_variable = { which = honor_leader_mining_stations_built value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_research_stations_built } prev = { set_variable = { which = honor_leader_research_stations_built value = prev.honor_leader_research_stations_built } } } else = { prev = { set_variable = { which = honor_leader_research_stations_built value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_observation_stations_built } prev = { set_variable = { which = honor_leader_observation_stations_built value = prev.honor_leader_observation_stations_built } } } else = { prev = { set_variable = { which = honor_leader_observation_stations_built value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_colonies_started } prev = { set_variable = { which = honor_leader_colonies_started value = prev.honor_leader_colonies_started } } } else = { prev = { set_variable = { which = honor_leader_colonies_started value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_colonies_founded } prev = { set_variable = { which = honor_leader_colonies_founded value = prev.honor_leader_colonies_founded } } } else = { prev = { set_variable = { which = honor_leader_colonies_founded value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_building_demolished } prev = { set_variable = { which = honor_leader_building_demolished value = prev.honor_leader_building_demolished } } } else = { prev = { set_variable = { which = honor_leader_building_demolished value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_districts_demolished } prev = { set_variable = { which = honor_leader_districts_demolished value = prev.honor_leader_districts_demolished } } } else = { prev = { set_variable = { which = honor_leader_districts_demolished value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_terraforming_started } prev = { set_variable = { which = honor_leader_terraforming_started value = prev.honor_leader_terraforming_started } } } else = { prev = { set_variable = { which = honor_leader_terraforming_started value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_planets_terraformed } prev = { set_variable = { which = honor_leader_planets_terraformed value = prev.honor_leader_planets_terraformed } } } else = { prev = { set_variable = { which = honor_leader_planets_terraformed value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_armies_recruited } prev = { set_variable = { which = honor_leader_armies_recruited value = prev.honor_leader_armies_recruited } } } else = { prev = { set_variable = { which = honor_leader_armies_recruited value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_pops_declined } prev = { set_variable = { which = honor_leader_pops_declined value = prev.honor_leader_pops_declined } } } else = { prev = { set_variable = { which = honor_leader_pops_declined value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_pops_displaced } prev = { set_variable = { which = honor_leader_pops_displaced value = prev.honor_leader_pops_displaced } } } else = { prev = { set_variable = { which = honor_leader_pops_displaced value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_pops_emancipated } prev = { set_variable = { which = honor_leader_pops_emancipated value = prev.honor_leader_pops_emancipated } } } else = { prev = { set_variable = { which = honor_leader_pops_emancipated value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_pops_enslaved } prev = { set_variable = { which = honor_leader_pops_enslaved value = prev.honor_leader_pops_enslaved } } } else = { prev = { set_variable = { which = honor_leader_pops_enslaved value = 0 } } }
			if = { limit = { has_leader_flag = honor_leader_governor_allowed_rebels } prev = { set_leader_flag = honor_leader_governor_allowed_rebels } }
			if = { limit = { has_leader_flag = honor_leader_governor_fully_developed_buildings } prev = { set_leader_flag = honor_leader_governor_fully_developed_buildings } }
			if = { limit = { has_leader_flag = honor_leader_governor_fully_developed_districts } prev = { set_leader_flag = honor_leader_governor_fully_developed_districts } }
			if = { limit = { has_leader_flag = honor_leader_governor_fully_developed_planet } prev = { set_leader_flag = honor_leader_governor_fully_developed_planet } }
			if = { limit = { has_leader_flag = honor_leader_governor_purged_pops } prev = { set_leader_flag = honor_leader_governor_purged_pops } }
			if = { limit = { has_leader_flag = honor_leader_governor_purged_species_from_galaxy } prev = { set_leader_flag = honor_leader_governor_purged_species_from_galaxy } }
			if = { limit = { has_leader_flag = honor_leader_governor_slumlord } prev = { set_leader_flag = honor_leader_governor_slumlord } }
			prev = { set_variable = { which = honor_leader_class value = 2 } }
		}
		# Scientist check_variable = { which = honor_leader_class value = 3 }
		else_if = {
			limit = {
				prev = {
					OR = {
						check_variable = { which = honor_leader_class value = 3 }
						leader_class = scientist
					}
				}
			}
			if = { limit = { is_variable_set = honor_leader_evaded_hostiles } prev = { set_variable = { which = honor_leader_evaded_hostiles value = prev.honor_leader_evaded_hostiles } } } else = { prev = { set_variable = { which = honor_leader_evaded_hostiles value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_emergency_ftl_jumps } prev = { set_variable = { which = honor_leader_emergency_ftl_jumps value = prev.honor_leader_emergency_ftl_jumps } } } else = { prev = { set_variable = { which = honor_leader_emergency_ftl_jumps value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_systems_discovered } prev = { set_variable = { which = honor_leader_systems_discovered value = prev.honor_leader_systems_discovered } } } else = { prev = { set_variable = { which = honor_leader_systems_discovered value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_objects_surveyed } prev = { set_variable = { which = honor_leader_objects_surveyed value = prev.honor_leader_objects_surveyed } } } else = { prev = { set_variable = { which = honor_leader_objects_surveyed value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_systems_surveyed } prev = { set_variable = { which = honor_leader_systems_surveyed value = prev.honor_leader_systems_surveyed } } } else = { prev = { set_variable = { which = honor_leader_systems_surveyed value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_anomalies_researched } prev = { set_variable = { which = honor_leader_anomalies_researched value = prev.honor_leader_anomalies_researched } } } else = { prev = { set_variable = { which = honor_leader_anomalies_researched value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_special_projects_researched } prev = { set_variable = { which = honor_leader_special_projects_researched value = prev.honor_leader_special_projects_researched } } } else = { prev = { set_variable = { which = honor_leader_special_projects_researched value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_physics_techs_researched } prev = { set_variable = { which = honor_leader_physics_techs_researched value = prev.honor_leader_physics_techs_researched } } } else = { prev = { set_variable = { which = honor_leader_physics_techs_researched value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_society_techs_researched } prev = { set_variable = { which = honor_leader_society_techs_researched value = prev.honor_leader_society_techs_researched } } } else = { prev = { set_variable = { which = honor_leader_society_techs_researched value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_engineering_techs_researched } prev = { set_variable = { which = honor_leader_engineering_techs_researched value = prev.honor_leader_engineering_techs_researched } } } else = { prev = { set_variable = { which = honor_leader_engineering_techs_researched value = 0 } } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_ascension_theory } prev = { set_leader_flag = honor_leader_scientist_discovered_ascension_theory } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_automated_exploration } prev = { set_leader_flag = honor_leader_scientist_discovered_automated_exploration } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_battleship_hull_2 } prev = { set_leader_flag = honor_leader_scientist_discovered_battleship_hull_2 } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_capacity_boosters } prev = { set_leader_flag = honor_leader_scientist_discovered_capacity_boosters } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_climate_restoration } prev = { set_leader_flag = honor_leader_scientist_discovered_climate_restoration } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_cold_fusion_power } prev = { set_leader_flag = honor_leader_scientist_discovered_cold_fusion_power } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_combat_computers_3 } prev = { set_leader_flag = honor_leader_scientist_discovered_combat_computers_3 } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_construction_templates } prev = { set_leader_flag = honor_leader_scientist_discovered_construction_templates } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_corvette_hull_2 } prev = { set_leader_flag = honor_leader_scientist_discovered_corvette_hull_2 } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_cruiser_hull_2 } prev = { set_leader_flag = honor_leader_scientist_discovered_cruiser_hull_2 } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_crystal_armor_1 } prev = { set_leader_flag = honor_leader_scientist_discovered_crystal_armor_1 } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_crystal_armor_2 } prev = { set_leader_flag = honor_leader_scientist_discovered_crystal_armor_2 } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_dark_matter_deflector } prev = { set_leader_flag = honor_leader_scientist_discovered_dark_matter_deflector } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_dark_matter_power_core } prev = { set_leader_flag = honor_leader_scientist_discovered_dark_matter_power_core } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_dark_matter_propulsion } prev = { set_leader_flag = honor_leader_scientist_discovered_dark_matter_propulsion } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_defense_platform_hull_1 } prev = { set_leader_flag = honor_leader_scientist_discovered_defense_platform_hull_1 } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_destroyer_hull_2 } prev = { set_leader_flag = honor_leader_scientist_discovered_destroyer_hull_2 } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_droid_workers } prev = { set_leader_flag = honor_leader_scientist_discovered_droid_workers } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_ecological_adaptation } prev = { set_leader_flag = honor_leader_scientist_discovered_ecological_adaptation } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_epigenetic_triggers } prev = { set_leader_flag = honor_leader_scientist_discovered_epigenetic_triggers } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_extradimensional_weapon_1 } prev = { set_leader_flag = honor_leader_scientist_discovered_extradimensional_weapon_1 } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_ftl_inhibitor } prev = { set_leader_flag = honor_leader_scientist_discovered_ftl_inhibitor } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_galactic_administration } prev = { set_leader_flag = honor_leader_scientist_discovered_galactic_administration } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_galactic_markets } prev = { set_leader_flag = honor_leader_scientist_discovered_galactic_markets } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_gene_banks } prev = { set_leader_flag = honor_leader_scientist_discovered_gene_banks } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_gene_expressions } prev = { set_leader_flag = honor_leader_scientist_discovered_gene_expressions } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_gene_tailoring } prev = { set_leader_flag = honor_leader_scientist_discovered_gene_tailoring } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_genetic_resequencing } prev = { set_leader_flag = honor_leader_scientist_discovered_genetic_resequencing } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_housing_1 } prev = { set_leader_flag = honor_leader_scientist_discovered_housing_1 } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_housing_2 } prev = { set_leader_flag = honor_leader_scientist_discovered_housing_2 } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_jump_drive_1 } prev = { set_leader_flag = honor_leader_scientist_discovered_jump_drive_1 } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_lasers_2 } prev = { set_leader_flag = honor_leader_scientist_discovered_lasers_2 } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_mine_betharian } prev = { set_leader_flag = honor_leader_scientist_discovered_mine_betharian } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_mine_dark_matter } prev = { set_leader_flag = honor_leader_scientist_discovered_mine_dark_matter } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_mine_exotic_gases } prev = { set_leader_flag = honor_leader_scientist_discovered_mine_exotic_gases } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_mine_living_metal } prev = { set_leader_flag = honor_leader_scientist_discovered_mine_living_metal } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_mine_rare_crystals } prev = { set_leader_flag = honor_leader_scientist_discovered_mine_rare_crystals } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_mine_volatile_motes } prev = { set_leader_flag = honor_leader_scientist_discovered_mine_volatile_motes } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_mine_zro } prev = { set_leader_flag = honor_leader_scientist_discovered_mine_zro } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_mining_drone_weapon_1 } prev = { set_leader_flag = honor_leader_scientist_discovered_mining_drone_weapon_1 } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_modular_engineering } prev = { set_leader_flag = honor_leader_scientist_discovered_modular_engineering } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_morphogenetic_field_mastery } prev = { set_leader_flag = honor_leader_scientist_discovered_morphogenetic_field_mastery } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_neural_implants } prev = { set_leader_flag = honor_leader_scientist_discovered_neural_implants } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_null_void_beam } prev = { set_leader_flag = honor_leader_scientist_discovered_null_void_beam } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_nutrient_replication } prev = { set_leader_flag = honor_leader_scientist_discovered_nutrient_replication } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_penal_colonies } prev = { set_leader_flag = honor_leader_scientist_discovered_penal_colonies } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_planetary_shield_generator } prev = { set_leader_flag = honor_leader_scientist_discovered_planetary_shield_generator } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_psionic_barrier } prev = { set_leader_flag = honor_leader_scientist_discovered_psionic_barrier } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_psionic_theory } prev = { set_leader_flag = honor_leader_scientist_discovered_psionic_theory } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_regenerative_hull_tissue } prev = { set_leader_flag = honor_leader_scientist_discovered_regenerative_hull_tissue } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_resort_colonies } prev = { set_leader_flag = honor_leader_scientist_discovered_resort_colonies } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_robotic_workers } prev = { set_leader_flag = honor_leader_scientist_discovered_robotic_workers } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_selected_lineages } prev = { set_leader_flag = honor_leader_scientist_discovered_selected_lineages } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_space_cloud_weapon_1 } prev = { set_leader_flag = honor_leader_scientist_discovered_space_cloud_weapon_1 } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_space_defense_station_improvement } prev = { set_leader_flag = honor_leader_scientist_discovered_space_defense_station_improvement } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_space_whale_weapon_1 } prev = { set_leader_flag = honor_leader_scientist_discovered_space_whale_weapon_1 } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_starbase_5 } prev = { set_leader_flag = honor_leader_scientist_discovered_starbase_5 } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_subdermal_stimulation } prev = { set_leader_flag = honor_leader_scientist_discovered_subdermal_stimulation } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_synchronized_defences } prev = { set_leader_flag = honor_leader_scientist_discovered_synchronized_defences } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_synthetic_workers } prev = { set_leader_flag = honor_leader_scientist_discovered_synthetic_workers } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_terrestrial_sculpting } prev = { set_leader_flag = honor_leader_scientist_discovered_terrestrial_sculpting } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_tomb_world_adaption } prev = { set_leader_flag = honor_leader_scientist_discovered_tomb_world_adaption } }
			if = { limit = { has_leader_flag = honor_leader_scientist_discovered_wormhole_stabilization } prev = { set_leader_flag = honor_leader_scientist_discovered_wormhole_stabilization } }
			# DLC
			if = { limit = { is_variable_set = honor_leader_archeology_sites_finished } prev = { set_variable = { which = honor_leader_archeology_sites_finished value = prev.honor_leader_archeology_sites_finished } } } else = { prev = { set_variable = { which = honor_leader_archeology_sites_finished value = 0 } } }
			prev = { set_variable = { which = honor_leader_class value = 3 } }
		}
		# Admiral check_variable = { which = honor_leader_class value = 4 }
		else_if = {
			limit = {
				prev = {
					OR = {
						check_variable = { which = honor_leader_class value = 4 }
						leader_class = admiral
					}
				}
			}
			if = { limit = { is_variable_set = honor_leader_space_battles_fought } prev = { set_variable = { which = honor_leader_space_battles_fought value = prev.honor_leader_space_battles_fought } } } else = { prev = { set_variable = { which = honor_leader_space_battles_fought value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_space_battles_won } prev = { set_variable = { which = honor_leader_space_battles_won value = prev.honor_leader_space_battles_won } } } else = { prev = { set_variable = { which = honor_leader_space_battles_won value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_space_battles_lost } prev = { set_variable = { which = honor_leader_space_battles_lost value = prev.honor_leader_space_battles_lost } } } else = { prev = { set_variable = { which = honor_leader_space_battles_lost value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_ships_destroyed } prev = { set_variable = { which = honor_leader_ships_destroyed value = prev.honor_leader_ships_destroyed } } } else = { prev = { set_variable = { which = honor_leader_ships_destroyed value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_ships_lost } prev = { set_variable = { which = honor_leader_ships_lost value = prev.honor_leader_ships_lost } } } else = { prev = { set_variable = { which = honor_leader_ships_lost value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_ships_upgraded } prev = { set_variable = { which = honor_leader_ships_upgraded value = prev.honor_leader_ships_upgraded } } } else = { prev = { set_variable = { which = honor_leader_ships_upgraded value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_fleets_destroyed } prev = { set_variable = { which = honor_leader_fleets_destroyed value = prev.honor_leader_fleets_destroyed } } } else = { prev = { set_variable = { which = honor_leader_fleets_destroyed value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_fleets_lost } prev = { set_variable = { which = honor_leader_fleets_lost value = prev.honor_leader_fleets_lost } } } else = { prev = { set_variable = { which = honor_leader_fleets_lost value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_fleets_disbanded } prev = { set_variable = { which = honor_leader_fleets_disbanded value = prev.honor_leader_fleets_disbanded } } } else = { prev = { set_variable = { which = honor_leader_fleets_disbanded value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_space_critters_destroyed } prev = { set_variable = { which = honor_leader_space_critters_destroyed value = prev.honor_leader_space_critters_destroyed } } } else = { prev = { set_variable = { which = honor_leader_space_critters_destroyed value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_pirate_ships_destroyed } prev = { set_variable = { which = honor_leader_pirate_ships_destroyed value = prev.honor_leader_pirate_ships_destroyed } } } else = { prev = { set_variable = { which = honor_leader_pirate_ships_destroyed value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_crisis_ships_destroyed } prev = { set_variable = { which = honor_leader_crisis_ships_destroyed value = prev.honor_leader_crisis_ships_destroyed } } } else = { prev = { set_variable = { which = honor_leader_crisis_ships_destroyed value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_days_bombarding_planet } prev = { set_variable = { which = honor_leader_days_bombarding_planet value = prev.honor_leader_days_bombarding_planet } } } else = { prev = { set_variable = { which = honor_leader_days_bombarding_planet value = 0 } } }
			if = { limit = { has_leader_flag = honor_leader_admiral_undefeated } prev = { set_leader_flag = honor_leader_admiral_undefeated } }
			# DLC
			if = { limit = { is_variable_set = honor_leader_colonies_eradicated } prev = { set_variable = { which = honor_leader_colonies_eradicated value = prev.honor_leader_colonies_eradicated } } } else = { prev = { set_variable = { which = honor_leader_colonies_eradicated value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_pops_abducted } prev = { set_variable = { which = honor_leader_pops_abducted value = prev.honor_leader_pops_abducted } } } else = { prev = { set_variable = { which = honor_leader_pops_abducted value = 0 } } }
			if = { limit = { has_leader_flag = honor_leader_admiral_eradicated_colony } prev = { set_leader_flag = honor_leader_admiral_eradicated_colony } }
			prev = { set_variable = { which = honor_leader_class value = 4 } }
		}
		# General check_variable = { which = honor_leader_class value = 5 }
		else_if = {
			limit = {
				prev = {
					OR = {
						check_variable = { which = honor_leader_class value = 5 }
						leader_class = general
					}
				}
			}
			if = { limit = { is_variable_set = honor_leader_ground_combats_won } prev = { set_variable = { which = honor_leader_ground_combats_won value = prev.honor_leader_ground_combats_won } } } else = { prev = { set_variable = { which = honor_leader_ground_combats_won value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_ground_combats_lost } prev = { set_variable = { which = honor_leader_ground_combats_lost value = prev.honor_leader_ground_combats_lost } } } else = { prev = { set_variable = { which = honor_leader_ground_combats_lost value = 0 } } }
			if = { limit = { is_variable_set = honor_leader_planets_leveled_ground_combat } prev = { set_variable = { which = honor_leader_planets_leveled_ground_combat value = prev.honor_leader_planets_leveled_ground_combat } } } else = { prev = { set_variable = { which = honor_leader_planets_leveled_ground_combat value = 0 } } }
			if = { limit = { has_leader_flag = honor_leader_general_leveled_a_planet } prev = { set_leader_flag = honor_leader_general_leveled_a_planet } }
			if = { limit = { has_leader_flag = honor_leader_general_undefeated } prev = { set_leader_flag = honor_leader_general_undefeated } }
			prev = { set_variable = { which = honor_leader_class value = 5 } }
		}

		### Flags
		# Only if fleet leader
		# if = {
		# 	limit = {
		# 		# check_variable = { which = honor_leader_class value > 2 }
		# 		OR = {
		# 			has_leader_flag = leader_on_fleet
		# 			has_leader_flag = honor_leader_probably_dead
		# 			exists = event_target:honor_leader_system
		# 			exists = fleet
		# 		}
		# 	}
		# Death Flags (only once)
		if = { limit = { has_leader_flag = honor_leader_cod_guardian }
			switch = { trigger = has_leader_flag
				honor_leader_cod_dragon			= { prev = { set_leader_flag = honor_leader_cod_dragon } }
				honor_leader_cod_sphere			= { prev = { set_leader_flag = honor_leader_cod_sphere } }
				honor_leader_cod_wraith			= { prev = { set_leader_flag = honor_leader_cod_wraith } }
				honor_leader_cod_horror			= { prev = { set_leader_flag = honor_leader_cod_horror } }
				honor_leader_cod_fortress		= { prev = { set_leader_flag = honor_leader_cod_fortress } }
				honor_leader_cod_hiver			= { prev = { set_leader_flag = honor_leader_cod_hiver } }
				honor_leader_cod_stellarite		= { prev = { set_leader_flag = honor_leader_cod_stellarite } }
				honor_leader_cod_dreadnought	= { prev = { set_leader_flag = honor_leader_cod_dreadnought } }
				honor_leader_cod_scavenger_bot	= { prev = { set_leader_flag = honor_leader_cod_scavenger_bot } }
				honor_leader_cod_elderly_tiyank	= { prev = { set_leader_flag = honor_leader_cod_elderly_tiyanki } }
				honor_leader_cod_voidspawn		= { prev = { set_leader_flag = honor_leader_cod_voidspawn } }
				honor_leader_cod_toxic_god		= { prev = { set_leader_flag = honor_leader_cod_toxic_god } }
				default							= { prev = { set_leader_flag = honor_leader_cod_guardian } }
			}
			# else_if = { limit = { has_leader_flag = honor_leader_cod_stellarite } prev = { set_leader_flag = honor_leader_cod_stellarite } }
			# else_if = { limit = { has_leader_flag = honor_leader_cod_sphere } prev = { set_leader_flag = honor_leader_cod_sphere } }
			# else_if = { limit = { has_leader_flag = honor_leader_cod_fortress } prev = { set_leader_flag = honor_leader_cod_fortress } }
			# else_if = { limit = { has_leader_flag = honor_leader_cod_horror } prev = { set_leader_flag = honor_leader_cod_horror } }
			# else_if = { limit = { has_leader_flag = honor_leader_cod_dreadnought } prev = { set_leader_flag = honor_leader_cod_dreadnought } }
			# else_if = { limit = { has_leader_flag = honor_leader_cod_wraith } prev = { set_leader_flag = honor_leader_cod_wraith } }
			# else_if = { limit = { has_leader_flag = honor_leader_cod_dragon } prev = { set_leader_flag = honor_leader_cod_dragon } }
			# else_if = { limit = { has_leader_flag = honor_leader_cod_scavenger_bot } prev = { set_leader_flag = honor_leader_cod_scavenger_bot } }
			# else_if = { limit = { has_leader_flag = honor_leader_cod_elderly_tiyanki } prev = { set_leader_flag = honor_leader_cod_elderly_tiyanki } }
			# else_if = { limit = { has_leader_flag = honor_leader_cod_voidspawn } prev = { set_leader_flag = honor_leader_cod_voidspawn } }
		}
		else_if = { limit = { has_leader_flag = honor_leader_cod_xeno_empire } prev = { set_leader_flag = honor_leader_cod_xeno_empire } }
		else_if = { limit = { has_leader_flag = honor_leader_cod_fallen_empire } prev = { set_leader_flag = honor_leader_cod_fallen_empire } }
		else_if = { limit = { has_leader_flag = honor_leader_cod_ancient_mining_drone } prev = { set_leader_flag = honor_leader_cod_ancient_mining_drone } }
		else_if = { limit = { has_leader_flag = honor_leader_cod_crystal_ship } prev = { set_leader_flag = honor_leader_cod_crystal_ship } }
		else_if = { limit = { has_leader_flag = honor_leader_cod_space_amoeba } prev = { set_leader_flag = honor_leader_cod_space_amoeba } }
		else_if = { limit = { has_leader_flag = honor_leader_cod_space_cloud } prev = { set_leader_flag = honor_leader_cod_space_cloud } }
		else_if = { limit = { has_leader_flag = honor_leader_cod_space_whale } prev = { set_leader_flag = honor_leader_cod_space_whale } }
		else_if = { limit = { has_leader_flag = honor_leader_cod_pirates } prev = { set_leader_flag = honor_leader_cod_pirates } }
		else_if = { limit = { has_leader_flag = honor_leader_cod_marauders } prev = { set_leader_flag = honor_leader_cod_marauders } }
		else_if = { limit = { has_leader_flag = honor_leader_cod_caravaneers } prev = { set_leader_flag = honor_leader_cod_caravaneers } }
		else_if = { limit = { has_leader_flag = honor_leader_cod_shroud_entities } prev = { set_leader_flag = honor_leader_cod_shroud_entities } }
		else_if = { limit = { has_leader_flag = honor_leader_cod_swarm } prev = { set_leader_flag = honor_leader_cod_swarm } }
		else_if = { limit = { has_leader_flag = honor_leader_cod_ed } prev = { set_leader_flag = honor_leader_cod_ed } }
		else_if = { limit = { has_leader_flag = honor_leader_cod_ai } prev = { set_leader_flag = honor_leader_cod_ai } }
		else_if = { limit = { has_leader_flag = honor_leader_cod_nano } prev = { set_leader_flag = honor_leader_cod_nano } }
		else_if = { limit = { has_leader_flag = honor_leader_cod_enclave_station } prev = { set_leader_flag = honor_leader_cod_enclave_station } }
		else_if = { limit = { has_leader_flag = honor_leader_cod_enigmatic_cache } prev = { set_leader_flag = honor_leader_cod_enigmatic_cache } }
		else_if = {
			limit = { has_leader_flag = honor_leader_probably_dead }
			prev = { set_leader_flag = honor_leader_probably_dead }
			if = {
				limit = {
					exists = fleet
					NOT = { exists = event_target:honor_leader_system }
					exists = fleet.solar_system
				}
				fleet.solar_system = { save_event_target_as = honor_leader_system }
			}
		}

		### NEW
		if = {
			limit = { is_variable_set = total_elections_won }
			prev = { set_variable = { which = total_elections_won value = prev.total_elections_won } }
			# if = { TODO
			# 	limit = { has_leader_flag = ruler_term_start_date_1 }
			# }
		}

		if = {
			limit = {
				NOR = {
					is_variable_set = honor_leader_skill
					prev = { is_variable_set = honor_leader_skill }
				}
			}
			export_trigger_value_to_variable = { trigger = has_level variable = honor_leader_skill }
			# export_trigger_value_to_variable = { trigger = has_level variable = dead_leader_level }
		}
		## Skill (if not clone)
		if = { limit = { has_skill > 1 is_variable_set = honor_leader_skill }
			# if		= { limit = { check_variable = { which = honor_leader_skill value = 1 } } prev = { set_skill = 1 } }
			if		= { limit = { check_variable = { which = honor_leader_skill value = 2 } } prev = { set_skill = 2 } }
			else_if	= { limit = { check_variable = { which = honor_leader_skill value = 3 } } prev = { set_skill = 3 } }
			else_if	= { limit = { check_variable = { which = honor_leader_skill value = 4 } } prev = { set_skill = 4 } }
			else_if	= { limit = { check_variable = { which = honor_leader_skill value = 5 } } prev = { set_skill = 5 } }
			else_if	= { limit = { check_variable = { which = honor_leader_skill value = 6 } } prev = { set_skill = 6 } }
			else_if	= { limit = { check_variable = { which = honor_leader_skill value = 7 } } prev = { set_skill = 7 } }
			else_if	= { limit = { check_variable = { which = honor_leader_skill value = 8 } } prev = { set_skill = 8 } }
			else_if	= { limit = { check_variable = { which = honor_leader_skill value = 9 } } prev = { set_skill = 9 } }
			else_if	= { limit = { check_variable = { which = honor_leader_skill value = 10 } } prev = { set_skill = 10 } }
			# clear_variable = honor_leader_skill
		}
	}
	if = { # (if not clone) needed for restore saved leader
		limit = { NOT = { has_leader_flag = honor_leader_interim_leader } has_leader_flag = honor_leader_dead_leader }
		change_leader_portrait = event_target:honor_leader
		set_name = event_target:honor_leader
	}

	set_variable = { which = honor_leader_skill value = event_target:honor_leader.honor_leader_skill }
	set_variable = { which = dead_leader_level value = honor_leader_skill }
	set_variable = { which = dead_leader_age value = event_target:honor_leader.dead_leader_age }

	if = { limit = { NOT = { is_variable_set = dead_leader_level } }
		if = { limit = { has_level > 1 }
			export_trigger_value_to_variable = { trigger = has_level variable = dead_leader_level }
		}
		else_if = { limit = { event_target:honor_leader = { is_variable_set = dead_leader_level } }
			set_variable = { which = dead_leader_level value = event_target:honor_leader.dead_leader_level }
		} else = {
			event_target:honor_leader = { export_trigger_value_to_variable = { trigger = has_level variable = dead_leader_level } }
			set_variable = { which = dead_leader_level value = event_target:honor_leader.dead_leader_level }
		}
	}

	# Cosmetic (if not clone)
	if = { limit = { NOT = { gender = female } event_target:honor_leader = { is_variable_set = honor_leader_gender check_variable = { which = honor_leader_gender value = 1 } } }
		set_is_female = yes
	}
	# Fallback for what?
	if = { limit = { NOT = { is_variable_set = honor_leader_class } }
		if = { limit = { event_target:honor_leader = { is_variable_set = honor_leader_class } }
			set_variable = { which = honor_leader_class value = event_target:honor_leader.honor_leader_class }
		} else = {
			switch = { trigger = leader_class
				# ruler = {
				# 	# set_variable = { which = honor_leader_class value = 1 }
				# 	if = { limit = { NOT = { has_leader_flag = honor_leader_dead_leader } }
				# 		set_variable = { which = honor_leader_calender_year value = owner.honor_leader_calender_year }
				# 		set_variable = { which = honor_leader_office_end value = honor_leader_calender_year }
				# 	}
				# }
				governor	= { set_variable = { which = honor_leader_class value = 2 } }
				scientist	= { set_variable = { which = honor_leader_class value = 3 } }
				admiral		= { set_variable = { which = honor_leader_class value = 4 } }
				general		= { set_variable = { which = honor_leader_class value = 5 } }
				envoy		= { set_variable = { which = honor_leader_class value = 6 } }
			}
		}
	}
	# Cause of Death
	if = {
		limit = { exists = event_target:honor_leader_cause_of_death event_target:honor_leader_cause_of_death = { is_scope_valid = yes } }
		event_target:honor_leader_cause_of_death = { save_global_event_target_as = honor_leader_cause_of_death_global }
		event_target:honor_leader_cause_of_death_global = { save_event_target_as = honor_leader_cause_of_death }
	}
	else_if = {
		limit = { event_target:honor_leader = { exists = event_target:honor_leader_cause_of_death event_target:honor_leader_cause_of_death = { is_scope_valid = yes } } }
		event_target:honor_leader = { event_target:honor_leader_cause_of_death = { save_global_event_target_as = honor_leader_cause_of_death_global } }
		event_target:honor_leader_cause_of_death_global = { save_event_target_as = honor_leader_cause_of_death }
	}
}

# TODO update actual vanilla traits
honor_leader_add_traits = {
	event_target:honor_leader = {
		# Generic leader traits
		if = { limit = { has_trait = leader_trait_adaptable } prev = { add_trait = leader_trait_adaptable } }
		if = { limit = { has_trait = leader_trait_stubborn } prev = { add_trait = leader_trait_stubborn } }
		if = { limit = { has_trait = leader_trait_resilient } prev = { add_trait = leader_trait_resilient } }
		if = { limit = { has_trait = leader_trait_substance_abuser } prev = { add_trait = leader_trait_substance_abuser } }
		if = { limit = { has_trait = leader_trait_eager } prev = { add_trait = leader_trait_eager } }
		if = { limit = { has_trait = leader_trait_arrested_development } prev = { add_trait = leader_trait_arrested_development } }
		# DLC Traits generic
		if = { limit = { has_trait = leader_trait_shroud_age } prev = { add_trait = leader_trait_shroud_age } }
		if = { limit = { has_trait = leader_trait_flexible_programming } prev = { add_trait = leader_trait_flexible_programming } }
		if = { limit = { has_trait = leader_trait_rigid_programming } prev = { add_trait = leader_trait_rigid_programming } }
		if = { limit = { has_trait = leader_trait_newboot } prev = { add_trait = leader_trait_newboot } }

		# if = { limit = { prev = { check_variable = { which = honor_leader_class value = 1 } } }
		if = { limit = { prev = { leader_class = ruler } }
			# Ruler traits
			if = { limit = { has_trait = trait_ruler_corvette_focus } prev = { add_trait = trait_ruler_corvette_focus } }
			if = { limit = { has_trait = trait_ruler_destroyer_focus } prev = { add_trait = trait_ruler_destroyer_focus } }
			if = { limit = { has_trait = trait_ruler_cruiser_focus } prev = { add_trait = trait_ruler_cruiser_focus } }
			if = { limit = { has_trait = trait_ruler_battleship_focus } prev = { add_trait = trait_ruler_battleship_focus } }
			if = { limit = { has_trait = trait_ruler_recruiter } prev = { add_trait = trait_ruler_recruiter } }
			if = { limit = { has_trait = trait_ruler_from_the_ranks } prev = { add_trait = trait_ruler_from_the_ranks } }
			if = { limit = { has_trait = trait_ruler_fortifier } prev = { add_trait = trait_ruler_fortifier } }
			if = { limit = { has_trait = trait_ruler_logistic_understanding } prev = { add_trait = trait_ruler_logistic_understanding } }
			if = { limit = { has_trait = trait_ruler_military_pioneer } prev = { add_trait = trait_ruler_military_pioneer } }
			if = { limit = { has_trait = trait_ruler_warlike } prev = { add_trait = trait_ruler_warlike } }
			if = { limit = { has_trait = trait_ruler_architectural_sense } prev = { add_trait = trait_ruler_architectural_sense } }
			if = { limit = { has_trait = trait_ruler_frontier_spirit } prev = { add_trait = trait_ruler_frontier_spirit } }
			if = { limit = { has_trait = trait_ruler_world_shaper } prev = { add_trait = trait_ruler_world_shaper } }
			if = { limit = { has_trait = trait_ruler_home_in_the_sky } prev = { add_trait = trait_ruler_home_in_the_sky } }
			if = { limit = { has_trait = trait_ruler_industrialist } prev = { add_trait = trait_ruler_industrialist } }
			if = { limit = { has_trait = trait_ruler_eye_for_talent } prev = { add_trait = trait_ruler_eye_for_talent } }
			if = { limit = { has_trait = trait_ruler_deep_connections } prev = { add_trait = trait_ruler_deep_connections } }
			if = { limit = { has_trait = trait_ruler_charismatic } prev = { add_trait = trait_ruler_charismatic } }
			if = { limit = { has_trait = trait_ruler_champion_of_the_people } prev = { add_trait = trait_ruler_champion_of_the_people } }
			if = { limit = { has_trait = trait_ruler_expansionist } prev = { add_trait = trait_ruler_expansionist } }
			if = { limit = { has_trait = trait_ruler_fertility_preacher } prev = { add_trait = trait_ruler_fertility_preacher } }
			if = { limit = { has_trait = trait_ruler_investor } prev = { add_trait = trait_ruler_investor } }
			if = { limit = { has_trait = trait_ruler_space_miner } prev = { add_trait = trait_ruler_space_miner } }
			if = { limit = { has_trait = trait_ruler_explorer } prev = { add_trait = trait_ruler_explorer } }
			if = { limit = { has_trait = leader_trait_fleet_organizer } prev = { add_trait = leader_trait_fleet_organizer } }
			# DLC
			if = { limit = { has_trait = leader_trait_ruler_erudite } prev = { add_trait = leader_trait_ruler_erudite } }
			if = { limit = { has_trait = leader_trait_ruler_cyborg } prev = { add_trait = leader_trait_ruler_cyborg } }
			if = { limit = { has_trait = leader_trait_ruler_synthetic } prev = { add_trait = leader_trait_ruler_synthetic } }
			if = { limit = { has_trait = leader_trait_ruler_psionic } prev = { add_trait = leader_trait_ruler_psionic } }
			if = { limit = { has_trait = leader_trait_ruler_chosen } prev = { add_trait = leader_trait_ruler_chosen } }
			if = { limit = { has_trait = leader_trait_ruler_hive_mind } prev = { add_trait = leader_trait_ruler_hive_mind } }
			if = { limit = { has_trait = leader_trait_ruler_machine_intelligence } prev = { add_trait = leader_trait_ruler_machine_intelligence } }
			if = { limit = { has_trait = leader_trait_ruler_brainslug } prev = { add_trait = leader_trait_ruler_brainslug } }
			if = { limit = { has_trait = leader_trait_unstable_code_base } prev = { add_trait = leader_trait_unstable_code_base } }
			if = { limit = { has_trait = leader_trait_maintenance_loop } prev = { add_trait = leader_trait_maintenance_loop } }
			if = { limit = { has_trait = leader_trait_reformer } prev = { add_trait = leader_trait_reformer } }
		} else_if = { limit = { prev = { check_variable = { which = honor_leader_class value = 2 } } }
			# Governor traits
			if = { limit = { has_trait = leader_trait_iron_fist } prev = { add_trait = leader_trait_iron_fist } }
			if = { limit = { has_trait = leader_trait_army_veteran } prev = { add_trait = leader_trait_army_veteran } }
			if = { limit = { has_trait = leader_trait_retired_fleet_officer } prev = { add_trait = leader_trait_retired_fleet_officer } }
			if = { limit = { has_trait = leader_trait_architectural_interest } prev = { add_trait = leader_trait_architectural_interest } }
			if = { limit = { has_trait = leader_trait_agrarian_upbringing } prev = { add_trait = leader_trait_agrarian_upbringing } }
			if = { limit = { has_trait = leader_trait_intellectual } prev = { add_trait = leader_trait_intellectual } }
			if = { limit = { has_trait = leader_trait_environmental_engineer } prev = { add_trait = leader_trait_environmental_engineer } }
			# DLC
			if = { limit = { has_trait = leader_trait_governor_brainslug } prev = { add_trait = leader_trait_governor_brainslug } }
			if = { limit = { has_trait = leader_trait_governor_gray } prev = { add_trait = leader_trait_governor_gray } }
			if = { limit = { has_trait = leader_trait_governor_oracle } prev = { add_trait = leader_trait_governor_oracle } }
			if = { limit = { has_trait = leader_trait_governor_erudite } prev = { add_trait = leader_trait_governor_erudite } }
			if = { limit = { has_trait = leader_trait_governor_cyborg } prev = { add_trait = leader_trait_governor_cyborg } }
			if = { limit = { has_trait = leader_trait_governor_synthetic } prev = { add_trait = leader_trait_governor_synthetic } }
			if = { limit = { has_trait = leader_trait_governor_psionic } prev = { add_trait = leader_trait_governor_psionic } }
			if = { limit = { has_trait = leader_trait_governor_chosen } prev = { add_trait = leader_trait_governor_chosen } }
			if = { limit = { has_trait = leader_trait_nuumismatic_priest } prev = { add_trait = leader_trait_nuumismatic_priest } }
			if = { limit = { has_trait = leader_trait_waste_management_specialist } prev = { add_trait = leader_trait_waste_management_specialist } }
			if = { limit = { has_trait = leader_trait_enclave_trader } prev = { add_trait = leader_trait_enclave_trader } }
			if = { limit = { has_trait = leader_trait_analytical } prev = { add_trait = leader_trait_analytical } }
			if = { limit = { has_trait = leader_trait_righteous } prev = { add_trait = leader_trait_righteous } }
			else_if = { limit = { has_trait = leader_trait_corrupt } prev = { add_trait = leader_trait_corrupt } }
			if = { limit = { has_trait = leader_trait_warbot_tinkerer } prev = { add_trait = leader_trait_warbot_tinkerer } }
			else_if = { limit = { has_trait = leader_trait_ai_aided_design } prev = { add_trait = leader_trait_ai_aided_design } }
			if = { limit = { has_trait = leader_trait_bulldozer } prev = { add_trait = leader_trait_bulldozer } }
		} else_if = { limit = { prev = { check_variable = { which = honor_leader_class value = 3 } } }
			# Scientist traits
			if = { limit = { has_trait = leader_trait_meticulous } prev = { add_trait = leader_trait_meticulous } }
			if = { limit = { has_trait = leader_trait_spark_of_genius } prev = { add_trait = leader_trait_spark_of_genius } }
			if = { limit = { has_trait = leader_trait_carefree } prev = { add_trait = leader_trait_carefree } }
			if = { limit = { has_trait = leader_trait_roamer } prev = { add_trait = leader_trait_roamer } }
			# Figure out ancient relics vs base.
			# if = { limit = { has_trait = leader_trait_archaeologist } prev = { add_trait = leader_trait_archaeologist } }
			if = { limit = { has_trait = leader_trait_paranoid } prev = { add_trait = leader_trait_paranoid } }
			if = { limit = { has_trait = leader_trait_maniacal } prev = { add_trait = leader_trait_maniacal } }
			if = { limit = { has_trait = leader_trait_custom_AI_assistant } prev = { add_trait = leader_trait_custom_AI_assistant } }
			if = { limit = { has_trait = leader_trait_sapient_AI_assistant } prev = { add_trait = leader_trait_sapient_AI_assistant } }
			if = { limit = { has_trait = leader_trait_expertise_materials } prev = { add_trait = leader_trait_expertise_materials } }
			if = { limit = { has_trait = leader_trait_expertise_propulsion } prev = { add_trait = leader_trait_expertise_propulsion } }
			if = { limit = { has_trait = leader_trait_expertise_voidcraft } prev = { add_trait = leader_trait_expertise_voidcraft } }
			if = { limit = { has_trait = leader_trait_expertise_industry } prev = { add_trait = leader_trait_expertise_industry } }
			if = { limit = { has_trait = leader_trait_expertise_field_manipulation } prev = { add_trait = leader_trait_expertise_field_manipulation } }
			if = { limit = { has_trait = leader_trait_expertise_particles } prev = { add_trait = leader_trait_expertise_particles } }
			if = { limit = { has_trait = leader_trait_expertise_computing } prev = { add_trait = leader_trait_expertise_computing } }
			if = { limit = { has_trait = leader_trait_expertise_psionics } prev = { add_trait = leader_trait_expertise_psionics } }
			if = { limit = { has_trait = leader_trait_expertise_new_worlds } prev = { add_trait = leader_trait_expertise_new_worlds } }
			if = { limit = { has_trait = leader_trait_expertise_statecraft } prev = { add_trait = leader_trait_expertise_statecraft } }
			if = { limit = { has_trait = leader_trait_expertise_biology } prev = { add_trait = leader_trait_expertise_biology } }
			if = { limit = { has_trait = leader_trait_expertise_military_theory } prev = { add_trait = leader_trait_expertise_military_theory } }
			if = { limit = { has_trait = leader_trait_towel } prev = { add_trait = leader_trait_towel } }
			# DLC
			if = { limit = { has_trait = leader_trait_scientist_erudite } prev = { add_trait = leader_trait_scientist_erudite } }
			if = { limit = { has_trait = leader_trait_scientist_cyborg } prev = { add_trait = leader_trait_scientist_cyborg } }
			if = { limit = { has_trait = leader_trait_scientist_synthetic } prev = { add_trait = leader_trait_scientist_synthetic } }
			if = { limit = { has_trait = leader_trait_scientist_psionic } prev = { add_trait = leader_trait_scientist_psionic } }
			if = { limit = { has_trait = leader_trait_scientist_chosen } prev = { add_trait = leader_trait_scientist_chosen } }
			if = { limit = { has_trait = leader_trait_scientist_brainslug } prev = { add_trait = leader_trait_scientist_brainslug } }
			if = { limit = { has_trait = leader_trait_inspired_archaeologist } prev = { add_trait = leader_trait_inspired_archaeologist } }
			if = { limit = { has_trait = leader_trait_inspired_researcher } prev = { add_trait = leader_trait_inspired_researcher } }
			if = { limit = { has_trait = leader_trait_inspired_surveyor } prev = { add_trait = leader_trait_inspired_surveyor } }
			if = { limit = { has_trait = leader_trait_maimed } prev = { add_trait = leader_trait_maimed } }
			if = { limit = { has_trait = leader_trait_traumatized } prev = { add_trait = leader_trait_traumatized } }
			if = { limit = { has_trait = leader_trait_cataloger } prev = { add_trait = leader_trait_cataloger } }
			if = { limit = { has_trait = leader_trait_curator } prev = { add_trait = leader_trait_curator } }
		} else_if = { limit = { prev = { check_variable = { which = honor_leader_class value = 4 } } }
			# Admiral traits
			if = { limit = { has_trait = leader_trait_trickster } prev = { add_trait = leader_trait_trickster } }
			if = { limit = { has_trait = leader_trait_fleet_logistician } prev = { add_trait = leader_trait_fleet_logistician } }
			if = { limit = { has_trait = leader_trait_engineer } prev = { add_trait = leader_trait_engineer } }
			if = { limit = { has_trait = leader_trait_aggressive } prev = { add_trait = leader_trait_aggressive } }
			if = { limit = { has_trait = leader_trait_cautious } prev = { add_trait = leader_trait_cautious } }
			if = { limit = { has_trait = leader_trait_scout } prev = { add_trait = leader_trait_scout } }
			if = { limit = { has_trait = leader_trait_unyielding } prev = { add_trait = leader_trait_unyielding } }
			if = { limit = { has_trait = leader_trait_nervous } prev = { add_trait = leader_trait_nervous } }
			if = { limit = { has_trait = leader_trait_gale_speed } prev = { add_trait = leader_trait_gale_speed } }
			if = { limit = { has_trait = leader_trait_lethargic } prev = { add_trait = leader_trait_lethargic } }
			# DLC
			if = { limit = { has_trait = leader_trait_admiral_erudite } prev = { add_trait = leader_trait_admiral_erudite } }
			if = { limit = { has_trait = leader_trait_admiral_cyborg } prev = { add_trait = leader_trait_admiral_cyborg } }
			if = { limit = { has_trait = leader_trait_admiral_synthetic } prev = { add_trait = leader_trait_admiral_synthetic } }
			if = { limit = { has_trait = leader_trait_admiral_psionic } prev = { add_trait = leader_trait_admiral_psionic } }
			if = { limit = { has_trait = leader_trait_admiral_chosen } prev = { add_trait = leader_trait_admiral_chosen } }
			if = { limit = { has_trait = leader_trait_admiral_brainslug } prev = { add_trait = leader_trait_admiral_brainslug } }
			if = { limit = { has_trait = leader_trait_admiral_hells_heart } prev = { add_trait = leader_trait_admiral_hells_heart } }
			if = { limit = { has_trait = leader_trait_caravan_counter } prev = { add_trait = leader_trait_caravan_counter } }
			if = { limit = { has_trait = leader_trait_restore_point } prev = { add_trait = leader_trait_restore_point } }
			if = { limit = { has_trait = leader_trait_foredoomed_to_a_rendezvous } prev = { add_trait = leader_trait_foredoomed_to_a_rendezvous } }
			if = { limit = { has_trait = leader_trait_mercenary_warrior } prev = { add_trait = leader_trait_mercenary_warrior } }
			if = { limit = { has_trait = leader_trait_dragonslayer } prev = { add_trait = leader_trait_dragonslayer } }
		} else_if = { limit = { prev = { check_variable = { which = honor_leader_class value = 5 } } }
			# General Traits
			if = { limit = { has_trait = leader_trait_restrained } prev = { add_trait = leader_trait_restrained } }
			if = { limit = { has_trait = leader_trait_charismatic } prev = { add_trait = leader_trait_charismatic } }
			if = { limit = { has_trait = leader_trait_butcher } prev = { add_trait = leader_trait_butcher } }
			if = { limit = { has_trait = leader_trait_glory_seeker } prev = { add_trait = leader_trait_glory_seeker } }
			if = { limit = { has_trait = leader_trait_armchair_commander } prev = { add_trait = leader_trait_armchair_commander } }
			if = { limit = { has_trait = leader_trait_army_logistician } prev = { add_trait = leader_trait_army_logistician } }
			# DLC
			if = { limit = { has_trait = leader_trait_general_erudite } prev = { add_trait = leader_trait_general_erudite } }
			if = { limit = { has_trait = leader_trait_general_cyborg } prev = { add_trait = leader_trait_general_cyborg } }
			if = { limit = { has_trait = leader_trait_general_synthetic } prev = { add_trait = leader_trait_general_synthetic } }
			if = { limit = { has_trait = leader_trait_general_psionic } prev = { add_trait = leader_trait_general_psionic } }
			if = { limit = { has_trait = leader_trait_general_chosen } prev = { add_trait = leader_trait_general_chosen } }
			if = { limit = { has_trait = leader_trait_general_mercenary_warrior } prev = { add_trait = leader_trait_general_mercenary_warrior } }
			if = { limit = { has_trait = leader_trait_general_brainslug } prev = { add_trait = leader_trait_general_brainslug } }
			if = { limit = { has_trait = leader_trait_erratic_morality_core } prev = { add_trait = leader_trait_erratic_morality_core } }
			if = { limit = { has_trait = leader_trait_demoralizer } prev = { add_trait = leader_trait_demoralizer } }
			if = { limit = { has_trait = leader_trait_parts_cannibalizer } prev = { add_trait = leader_trait_parts_cannibalizer } }
		}
	}
}

# # Scope = leader
# honor_leader_randomize_leader_stats = {
# }
